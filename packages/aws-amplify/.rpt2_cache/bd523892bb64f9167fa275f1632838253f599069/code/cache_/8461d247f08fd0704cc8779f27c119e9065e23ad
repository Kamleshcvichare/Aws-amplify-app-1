{"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { ConsoleLogger as Logger } from '../Common';\r\nvar logger = new Logger('I18n');\r\n/**\r\n * Language transition class\r\n */\r\nvar I18n = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Initialize with configurations\r\n     * @param {Object} options\r\n     */\r\n    function I18n(options) {\r\n        /**\r\n         * @private\r\n         */\r\n        this._options = null;\r\n        /**\r\n         * @private\r\n         */\r\n        this._lang = null;\r\n        /**\r\n         * @private\r\n         */\r\n        this._dict = {};\r\n        this._options = Object.assign({}, options);\r\n        this._lang = this._options.language;\r\n        if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\r\n            this._lang = window.navigator.language;\r\n        }\r\n        logger.debug(this._lang);\r\n    }\r\n    /**\r\n     * @method\r\n     * Explicitly setting language\r\n     * @param {String} lang\r\n     */\r\n    I18n.prototype.setLanguage = function (lang) {\r\n        this._lang = lang;\r\n    };\r\n    /**\r\n     * @method\r\n     * Get value\r\n     * @param {String} key\r\n     * @param {String} defVal - Default value\r\n     */\r\n    I18n.prototype.get = function (key, defVal) {\r\n        if (defVal === void 0) { defVal = undefined; }\r\n        if (!this._lang) {\r\n            return (typeof defVal !== 'undefined') ? defVal : key;\r\n        }\r\n        var lang = this._lang;\r\n        var val = this.getByLanguage(key, lang);\r\n        if (val) {\r\n            return val;\r\n        }\r\n        if (lang.indexOf('-') > 0) {\r\n            val = this.getByLanguage(key, lang.split('-')[0]);\r\n        }\r\n        if (val) {\r\n            return val;\r\n        }\r\n        return (typeof defVal !== 'undefined') ? defVal : key;\r\n    };\r\n    /**\r\n     * @method\r\n     * Get value according to specified language\r\n     * @param {String} key\r\n     * @param {String} language - Specified langurage to be used\r\n     * @param {String} defVal - Default value\r\n     */\r\n    I18n.prototype.getByLanguage = function (key, language, defVal) {\r\n        if (defVal === void 0) { defVal = null; }\r\n        if (!language) {\r\n            return defVal;\r\n        }\r\n        var lang_dict = this._dict[language];\r\n        if (!lang_dict) {\r\n            return defVal;\r\n        }\r\n        return lang_dict[key];\r\n    };\r\n    /**\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {String} langurage - Language of the dictionary\r\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\r\n     */\r\n    I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\r\n        var lang_dict = this._dict[language];\r\n        if (!lang_dict) {\r\n            lang_dict = this._dict[language] = {};\r\n        }\r\n        Object.assign(lang_dict, vocabularies);\r\n    };\r\n    /**\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {Object} vocabularies - Object that has language as key,\r\n     *                                vocabularies of each language as value\r\n     */\r\n    I18n.prototype.putVocabularies = function (vocabularies) {\r\n        var _this = this;\r\n        Object.keys(vocabularies).map(function (key) {\r\n            _this.putVocabulariesForLanguage(key, vocabularies[key]);\r\n        });\r\n    };\r\n    return I18n;\r\n}());\r\nexport { I18n };\r\n//# sourceMappingURL=I18n.js.map","map":"{\"version\":3,\"file\":\"I18n.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/I18n/I18n.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/wezhuo/workplace/aws-amplify/packages/aws-amplify/I18n/I18n.d.ts","text":"import { I18nOptions } from './types';\r\n/**\r\n * Language transition class\r\n */\r\nexport declare class I18n {\r\n    /**\r\n     * @private\r\n     */\r\n    _options: I18nOptions;\r\n    /**\r\n     * @private\r\n     */\r\n    _lang: any;\r\n    /**\r\n     * @private\r\n     */\r\n    _dict: {};\r\n    /**\r\n     * @constructor\r\n     * Initialize with configurations\r\n     * @param {Object} options\r\n     */\r\n    constructor(options: I18nOptions);\r\n    /**\r\n     * @method\r\n     * Explicitly setting language\r\n     * @param {String} lang\r\n     */\r\n    setLanguage(lang: string): void;\r\n    /**\r\n     * @method\r\n     * Get value\r\n     * @param {String} key\r\n     * @param {String} defVal - Default value\r\n     */\r\n    get(key: any, defVal?: any): any;\r\n    /**\r\n     * @method\r\n     * Get value according to specified language\r\n     * @param {String} key\r\n     * @param {String} language - Specified langurage to be used\r\n     * @param {String} defVal - Default value\r\n     */\r\n    getByLanguage(key: any, language: any, defVal?: any): any;\r\n    /**\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {String} langurage - Language of the dictionary\r\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\r\n     */\r\n    putVocabulariesForLanguage(language: any, vocabularies: any): void;\r\n    /**\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {Object} vocabularies - Object that has language as key,\r\n     *                                vocabularies of each language as value\r\n     */\r\n    putVocabularies(vocabularies: any): void;\r\n}\r\n"}}
