{"code":"import * as tslib_1 from \"tslib\";\r\n/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { GraphQLError } from 'graphql';\r\nimport { print } from 'graphql/language/printer';\r\nimport { parse } from 'graphql/language/parser';\r\nimport * as Observable from 'zen-observable';\r\nimport PubSub from '../PubSub';\r\nimport { RestClient as RestClass } from './RestClient';\r\nimport Auth from '../Auth';\r\nimport { ConsoleLogger as Logger } from '../Common/Logger';\r\nvar logger = new Logger('API');\r\nexport var graphqlOperation = function (query, variables) {\r\n    if (variables === void 0) { variables = {}; }\r\n    return ({ query: query, variables: variables });\r\n};\r\n/**\r\n * Export Cloud Logic APIs\r\n */\r\nvar APIClass = /** @class */ (function () {\r\n    /**\r\n     * Initialize Storage with AWS configurations\r\n     * @param {Object} options - Configuration object for storage\r\n     */\r\n    function APIClass(options) {\r\n        this._api = null;\r\n        this._options = options;\r\n        logger.debug('API Options', this._options);\r\n    }\r\n    /**\r\n     * Configure API part with aws configurations\r\n     * @param {Object} config - Configuration of the API\r\n     * @return {Object} - The current configuration\r\n     */\r\n    APIClass.prototype.configure = function (options) {\r\n        var opt = options ? options.API || options : {};\r\n        logger.debug('configure API', { opt: opt });\r\n        if (opt['aws_project_region']) {\r\n            if (opt['aws_cloud_logic_custom']) {\r\n                var custom = opt['aws_cloud_logic_custom'];\r\n                opt.endpoints = (typeof custom === 'string') ? JSON.parse(custom)\r\n                    : custom;\r\n            }\r\n            opt = Object.assign({}, opt, {\r\n                region: opt['aws_project_region'],\r\n                header: {},\r\n            });\r\n        }\r\n        if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\r\n            logger.warn('graphql_headers should be a function');\r\n            opt.graphql_headers = undefined;\r\n        }\r\n        this._options = Object.assign({}, this._options, opt);\r\n        this.createInstance();\r\n        return this._options;\r\n    };\r\n    /**\r\n     * Create an instance of API for the library\r\n     * @return - A promise of true if Success\r\n     */\r\n    APIClass.prototype.createInstance = function () {\r\n        logger.debug('create API instance');\r\n        if (this._options) {\r\n            this._api = new RestClass(this._options);\r\n            return true;\r\n        }\r\n        else {\r\n            return Promise.reject('API no configured');\r\n        }\r\n    };\r\n    /**\r\n     * Make a GET request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    APIClass.prototype.get = function (apiName, path, init) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_1, credentialsOK, endpoint;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_1)];\r\n                    case 4: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 5:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        endpoint = this._api.endpoint(apiName);\r\n                        if (endpoint.length === 0) {\r\n                            return [2 /*return*/, Promise.reject('Api ' + apiName + ' does not exist')];\r\n                        }\r\n                        return [2 /*return*/, this._api.get(endpoint + path, init)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Make a POST request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    APIClass.prototype.post = function (apiName, path, init) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_2, credentialsOK, endpoint;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_2 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_2)];\r\n                    case 4: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 5:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        endpoint = this._api.endpoint(apiName);\r\n                        if (endpoint.length === 0) {\r\n                            return [2 /*return*/, Promise.reject('Api ' + apiName + ' does not exist')];\r\n                        }\r\n                        return [2 /*return*/, this._api.post(endpoint + path, init)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Make a PUT request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    APIClass.prototype.put = function (apiName, path, init) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_3, credentialsOK, endpoint;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_3 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_3)];\r\n                    case 4: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 5:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        endpoint = this._api.endpoint(apiName);\r\n                        if (endpoint.length === 0) {\r\n                            return [2 /*return*/, Promise.reject('Api ' + apiName + ' does not exist')];\r\n                        }\r\n                        return [2 /*return*/, this._api.put(endpoint + path, init)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Make a PATCH request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    APIClass.prototype.patch = function (apiName, path, init) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_4, credentialsOK, endpoint;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_4 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_4)];\r\n                    case 4: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 5:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        endpoint = this._api.endpoint(apiName);\r\n                        if (endpoint.length === 0) {\r\n                            return [2 /*return*/, Promise.reject('Api ' + apiName + ' does not exist')];\r\n                        }\r\n                        return [2 /*return*/, this._api.patch(endpoint + path, init)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Make a DEL request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    APIClass.prototype.del = function (apiName, path, init) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_5, credentialsOK, endpoint;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_5 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_5)];\r\n                    case 4: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 5:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        endpoint = this._api.endpoint(apiName);\r\n                        if (endpoint.length === 0) {\r\n                            return [2 /*return*/, Promise.reject('Api ' + apiName + ' does not exist')];\r\n                        }\r\n                        return [2 /*return*/, this._api.del(endpoint + path, init)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Make a HEAD request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    APIClass.prototype.head = function (apiName, path, init) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_6, credentialsOK, endpoint;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_6 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_6)];\r\n                    case 4: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 5:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        endpoint = this._api.endpoint(apiName);\r\n                        if (endpoint.length === 0) {\r\n                            return [2 /*return*/, Promise.reject('Api ' + apiName + ' does not exist')];\r\n                        }\r\n                        return [2 /*return*/, this._api.head(endpoint + path, init)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n    * Getting endpoint for API\r\n    * @param {string} apiName - The name of the api\r\n    * @return {string} - The endpoint of the api\r\n    */\r\n    APIClass.prototype.endpoint = function (apiName) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var error_7;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_7 = _a.sent();\r\n                        return [2 /*return*/, Promise.reject(error_7)];\r\n                    case 4: return [2 /*return*/, this._api.endpoint(apiName)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    APIClass.prototype._headerBasedAuth = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, authenticationType, apiKey, headers, credentialsOK, _b, session;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = this._options, authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\r\n                        headers = {};\r\n                        return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 1:\r\n                        credentialsOK = _c.sent();\r\n                        _b = authenticationType;\r\n                        switch (_b) {\r\n                            case 'API_KEY': return [3 /*break*/, 2];\r\n                            case 'AWS_IAM': return [3 /*break*/, 3];\r\n                            case 'AMAZON_COGNITO_USER_POOLS': return [3 /*break*/, 4];\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 2:\r\n                        headers = {\r\n                            Authorization: null,\r\n                            'X-Api-Key': apiKey\r\n                        };\r\n                        return [3 /*break*/, 7];\r\n                    case 3:\r\n                        if (!credentialsOK) {\r\n                            throw new Error('No credentials');\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 4: return [4 /*yield*/, Auth.currentSession()];\r\n                    case 5:\r\n                        session = _c.sent();\r\n                        headers = {\r\n                            Authorization: session.getAccessToken().getJwtToken()\r\n                        };\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        headers = {\r\n                            Authorization: null,\r\n                        };\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/, headers];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes a GraphQL operation\r\n     *\r\n     * @param {GraphQLOptions} GraphQL Options\r\n     * @returns {Promise<GraphQLResult> | Observable<object>}\r\n     */\r\n    APIClass.prototype.graphql = function (_a) {\r\n        var query = _a.query, _b = _a.variables, variables = _b === void 0 ? {} : _b;\r\n        var doc = parse(query);\r\n        var _c = doc.definitions.filter(function (def) { return def.kind === 'OperationDefinition'; })[0], operationDef = _c === void 0 ? {} : _c;\r\n        var operationType = operationDef.operation;\r\n        switch (operationType) {\r\n            case 'query':\r\n            case 'mutation':\r\n                return this._graphql({ query: query, variables: variables });\r\n            case 'subscription':\r\n                return this._graphqlSubscribe({ query: query, variables: variables });\r\n        }\r\n        throw new Error(\"invalid operation type: \" + operationType);\r\n    };\r\n    APIClass.prototype._graphql = function (_a) {\r\n        var queryStr = _a.query, variables = _a.variables;\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, doc, query, headers, _d, _e, body, init, endpoint, error, response, err_1, errors;\r\n            return tslib_1.__generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        if (!!this._api) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.createInstance()];\r\n                    case 1:\r\n                        _f.sent();\r\n                        _f.label = 2;\r\n                    case 2:\r\n                        _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c, customGraphqlEndpoint = _b.graphql_endpoint;\r\n                        doc = parse(queryStr);\r\n                        query = print(doc);\r\n                        _d = [{}];\r\n                        _e = !customGraphqlEndpoint;\r\n                        if (!_e) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this._headerBasedAuth()];\r\n                    case 3:\r\n                        _e = (_f.sent());\r\n                        _f.label = 4;\r\n                    case 4:\r\n                        _d = _d.concat([(_e),\r\n                            (customGraphqlEndpoint && { Authorization: null })]);\r\n                        return [4 /*yield*/, graphql_headers({ query: doc, variables: variables })];\r\n                    case 5:\r\n                        headers = tslib_1.__assign.apply(void 0, _d.concat([_f.sent()]));\r\n                        body = {\r\n                            query: query,\r\n                            variables: variables,\r\n                        };\r\n                        init = {\r\n                            headers: headers,\r\n                            body: body,\r\n                            signerServiceInfo: {\r\n                                service: 'appsync',\r\n                                region: region,\r\n                            }\r\n                        };\r\n                        endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\r\n                        if (!endpoint) {\r\n                            error = new GraphQLError('No graphql endpoint provided.');\r\n                            throw {\r\n                                data: {},\r\n                                errors: [error],\r\n                            };\r\n                        }\r\n                        _f.label = 6;\r\n                    case 6:\r\n                        _f.trys.push([6, 8, , 9]);\r\n                        return [4 /*yield*/, this._api.post(endpoint, init)];\r\n                    case 7:\r\n                        response = _f.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        err_1 = _f.sent();\r\n                        response = {\r\n                            data: {},\r\n                            errors: [\r\n                                new GraphQLError(err_1.message)\r\n                            ]\r\n                        };\r\n                        return [3 /*break*/, 9];\r\n                    case 9:\r\n                        errors = response.errors;\r\n                        if (errors && errors.length) {\r\n                            throw response;\r\n                        }\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    APIClass.prototype._graphqlSubscribe = function (_a) {\r\n        var _this = this;\r\n        var query = _a.query, variables = _a.variables;\r\n        return new Observable(function (observer) {\r\n            var handle = null;\r\n            (function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                var subscription, newSubscriptions, newTopics, observable;\r\n                return tslib_1.__generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, this._graphql({ query: query, variables: variables })];\r\n                        case 1:\r\n                            subscription = (_a.sent()).extensions.subscription;\r\n                            newSubscriptions = subscription.newSubscriptions;\r\n                            newTopics = Object.getOwnPropertyNames(newSubscriptions).map(function (p) { return newSubscriptions[p].topic; });\r\n                            observable = PubSub.subscribe(newTopics, subscription);\r\n                            handle = observable.subscribe(observer);\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); })();\r\n            return function () {\r\n                if (handle) {\r\n                    handle.unsubscribe();\r\n                }\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    APIClass.prototype._ensureCredentials = function () {\r\n        return Auth.currentCredentials()\r\n            .then(function (credentials) {\r\n            if (!credentials)\r\n                return false;\r\n            var cred = Auth.essentialCredentials(credentials);\r\n            logger.debug('set credentials for api', cred);\r\n            return credentials;\r\n        })\r\n            .catch(function (err) {\r\n            logger.warn('ensure credentials error', err);\r\n            return false;\r\n        });\r\n    };\r\n    return APIClass;\r\n}());\r\nexport default APIClass;\r\n//# sourceMappingURL=API.js.map","map":"{\"version\":3,\"file\":\"API.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/API/API.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/wezhuo/workplace/aws-amplify/packages/aws-amplify/API/API.d.ts","text":"/// <reference types=\"zen-observable\" />\r\nimport * as Observable from 'zen-observable';\r\nimport { GraphQLOptions, GraphQLResult } from './types';\r\nexport declare const graphqlOperation: (query: any, variables?: {}) => {\r\n    query: any;\r\n    variables: {};\r\n};\r\n/**\r\n * Export Cloud Logic APIs\r\n */\r\nexport default class APIClass {\r\n    /**\r\n     * @private\r\n     */\r\n    private _options;\r\n    private _api;\r\n    /**\r\n     * Initialize Storage with AWS configurations\r\n     * @param {Object} options - Configuration object for storage\r\n     */\r\n    constructor(options: any);\r\n    /**\r\n     * Configure API part with aws configurations\r\n     * @param {Object} config - Configuration of the API\r\n     * @return {Object} - The current configuration\r\n     */\r\n    configure(options: any): any;\r\n    /**\r\n     * Create an instance of API for the library\r\n     * @return - A promise of true if Success\r\n     */\r\n    createInstance(): true | Promise<never>;\r\n    /**\r\n     * Make a GET request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    get(apiName: any, path: any, init: any): Promise<any>;\r\n    /**\r\n     * Make a POST request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    post(apiName: any, path: any, init: any): Promise<any>;\r\n    /**\r\n     * Make a PUT request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    put(apiName: any, path: any, init: any): Promise<any>;\r\n    /**\r\n     * Make a PATCH request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    patch(apiName: any, path: any, init: any): Promise<any>;\r\n    /**\r\n     * Make a DEL request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    del(apiName: any, path: any, init: any): Promise<any>;\r\n    /**\r\n     * Make a HEAD request\r\n     * @param {string} apiName  - The api name of the request\r\n     * @param {string} path - The path of the request\r\n     * @param {json} [init] - Request extra params\r\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\r\n     */\r\n    head(apiName: any, path: any, init: any): Promise<any>;\r\n    /**\r\n    * Getting endpoint for API\r\n    * @param {string} apiName - The name of the api\r\n    * @return {string} - The endpoint of the api\r\n    */\r\n    endpoint(apiName: any): Promise<any>;\r\n    private _headerBasedAuth();\r\n    /**\r\n     * Executes a GraphQL operation\r\n     *\r\n     * @param {GraphQLOptions} GraphQL Options\r\n     * @returns {Promise<GraphQLResult> | Observable<object>}\r\n     */\r\n    graphql({query, variables}: GraphQLOptions): Promise<GraphQLResult> | Observable<object>;\r\n    private _graphql({query: queryStr, variables});\r\n    private _graphqlSubscribe({query, variables});\r\n    /**\r\n     * @private\r\n     */\r\n    _ensureCredentials(): Promise<any>;\r\n}\r\n"}}
