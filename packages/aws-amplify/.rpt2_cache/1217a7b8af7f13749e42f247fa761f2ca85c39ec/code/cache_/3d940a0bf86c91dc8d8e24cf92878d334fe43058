{"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { I18n as I18nClass } from './I18n';\r\nimport { ConsoleLogger as Logger } from '../Common/Logger';\r\nvar logger = new Logger('I18n');\r\nvar _config = null;\r\nvar _i18n = null;\r\n/**\r\n * Export I18n APIs\r\n */\r\nvar I18n = /** @class */ (function () {\r\n    function I18n() {\r\n    }\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Configure I18n part\r\n     * @param {Object} config - Configuration of the I18n\r\n     */\r\n    I18n.configure = function (config) {\r\n        logger.debug('configure I18n');\r\n        if (!config) {\r\n            return _config;\r\n        }\r\n        _config = Object.assign({}, _config, config.I18n || config);\r\n        I18n.createInstance();\r\n        return _config;\r\n    };\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Create an instance of I18n for the library\r\n     */\r\n    I18n.createInstance = function () {\r\n        logger.debug('create I18n instance');\r\n        if (_i18n) {\r\n            return;\r\n        }\r\n        _i18n = new I18nClass(_config);\r\n    };\r\n    /**\r\n     * @static @method\r\n     * Explicitly setting language\r\n     * @param {String} lang\r\n     */\r\n    I18n.setLanguage = function (lang) {\r\n        I18n.checkConfig();\r\n        return _i18n.setLanguage(lang);\r\n    };\r\n    /**\r\n     * @static @method\r\n     * Get value\r\n     * @param {String} key\r\n     * @param {String} defVal - Default value\r\n     */\r\n    I18n.get = function (key, defVal) {\r\n        if (!I18n.checkConfig()) {\r\n            return (typeof defVal === 'undefined') ? key : defVal;\r\n        }\r\n        return _i18n.get(key, defVal);\r\n    };\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {String} langurage - Language of the dictionary\r\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\r\n     */\r\n    I18n.putVocabulariesForLanguage = function (language, vocabularies) {\r\n        I18n.checkConfig();\r\n        return _i18n.putVocabulariesForLanguage(language, vocabularies);\r\n    };\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {Object} vocabularies - Object that has language as key,\r\n     *                                vocabularies of each language as value\r\n     */\r\n    I18n.putVocabularies = function (vocabularies) {\r\n        I18n.checkConfig();\r\n        return _i18n.putVocabularies(vocabularies);\r\n    };\r\n    I18n.checkConfig = function () {\r\n        if (!_i18n) {\r\n            _i18n = new I18nClass(_config);\r\n        }\r\n        return true;\r\n    };\r\n    return I18n;\r\n}());\r\nexport default I18n;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/I18n/index.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;GAWG;AAEH,OAAO,EAAE,IAAI,IAAI,SAAS,EAAE,MAAM,QAAQ,CAAC;AAE3C,OAAO,EAAE,aAAa,IAAI,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE3D,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAElC,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,IAAI,KAAK,GAAG,IAAI,CAAC;AAEjB;;GAEG;AACH;IAAA;IAmFA,CAAC;IAlFG;;;;;OAKG;IACI,cAAS,GAAhB,UAAiB,MAAM;QACnB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC/B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC;QAAC,CAAC;QAEhC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEF;;;;OAIG;IACK,mBAAc,GAArB;QACI,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QACrC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAAC,CAAC;QACtB,KAAK,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACI,gBAAW,GAAlB,UAAmB,IAAI;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;;;OAKG;IACI,QAAG,GAAV,UAAW,GAAG,EAAE,MAAM;QAClB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;QAAC,CAAC;QAElF,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IAED;;;;;;OAMG;IACI,+BAA0B,GAAjC,UAAkC,QAAQ,EAAE,YAAY;QACpD,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IACpE,CAAC;IAED;;;;;;OAMG;IACI,oBAAe,GAAtB,UAAuB,YAAY;QAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAEa,gBAAW,GAAzB;QACI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAAC,KAAK,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;QAAC,CAAC;QAE/C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,WAAC;AAAD,CAAC,AAnFD,IAmFC\"}","dts":{"name":"/Users/wezhuo/workplace/aws-amplify/packages/aws-amplify/I18n/index.d.ts","text":"/**\r\n * Export I18n APIs\r\n */\r\nexport default class I18n {\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Configure I18n part\r\n     * @param {Object} config - Configuration of the I18n\r\n     */\r\n    static configure(config: any): any;\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Create an instance of I18n for the library\r\n     */\r\n    static createInstance(): void;\r\n    /**\r\n     * @static @method\r\n     * Explicitly setting language\r\n     * @param {String} lang\r\n     */\r\n    static setLanguage(lang: any): any;\r\n    /**\r\n     * @static @method\r\n     * Get value\r\n     * @param {String} key\r\n     * @param {String} defVal - Default value\r\n     */\r\n    static get(key: any, defVal: any): any;\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {String} langurage - Language of the dictionary\r\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\r\n     */\r\n    static putVocabulariesForLanguage(language: any, vocabularies: any): any;\r\n    /**\r\n     * @static\r\n     * @method\r\n     * Add vocabularies for one language\r\n     * @param {Object} vocabularies - Object that has language as key,\r\n     *                                vocabularies of each language as value\r\n     */\r\n    static putVocabularies(vocabularies: any): any;\r\n    static checkConfig(): boolean;\r\n}\r\n"}}
