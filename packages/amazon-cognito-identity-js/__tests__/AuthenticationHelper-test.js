import AuthenticationHelper from '../src/AuthenticationHelper';

import BigInteger from '../src/BigInteger';

describe('AuthenticatorHelper', () => {
	const instance = new AuthenticationHelper('TestPoolName');

	/*
	Test cases generated in java with:

	import java.math.BigInteger;
	public class Main
	{
		private static final char[] HEX_ARRAY = "0123456789ABCDEF".toCharArray();
		public static String bytesToHex(byte[] bytes) {
			char[] hexChars = new char[bytes.length * 2];
			for (int j = 0; j < bytes.length; j++) {
				int v = bytes[j] & 0xFF;
				hexChars[j * 2] = HEX_ARRAY[v >>> 4];
				hexChars[j * 2 + 1] = HEX_ARRAY[v & 0x0F];
			}
			return new String(hexChars);
		}
		public static void main(String[] args) {
			for(int i = -256; i <=256; i++) {
				byte arr[] = BigInteger.valueOf(i).toByteArray();
				byte[] x = {(byte)i};
				System.out.println("[" + i +", '" + bytesToHex(x) + "', '" + bytesToHex(arr) + "'],");
			}
		}
	}
	*/
	test.each([
		[-256, '00', 'FF00'],
		[-255, '01', 'FF01'],
		[-254, '02', 'FF02'],
		[-253, '03', 'FF03'],
		[-252, '04', 'FF04'],
		[-251, '05', 'FF05'],
		[-250, '06', 'FF06'],
		[-249, '07', 'FF07'],
		[-248, '08', 'FF08'],
		[-247, '09', 'FF09'],
		[-246, '0A', 'FF0A'],
		[-245, '0B', 'FF0B'],
		[-244, '0C', 'FF0C'],
		[-243, '0D', 'FF0D'],
		[-242, '0E', 'FF0E'],
		[-241, '0F', 'FF0F'],
		[-240, '10', 'FF10'],
		[-239, '11', 'FF11'],
		[-238, '12', 'FF12'],
		[-237, '13', 'FF13'],
		[-236, '14', 'FF14'],
		[-235, '15', 'FF15'],
		[-234, '16', 'FF16'],
		[-233, '17', 'FF17'],
		[-232, '18', 'FF18'],
		[-231, '19', 'FF19'],
		[-230, '1A', 'FF1A'],
		[-229, '1B', 'FF1B'],
		[-228, '1C', 'FF1C'],
		[-227, '1D', 'FF1D'],
		[-226, '1E', 'FF1E'],
		[-225, '1F', 'FF1F'],
		[-224, '20', 'FF20'],
		[-223, '21', 'FF21'],
		[-222, '22', 'FF22'],
		[-221, '23', 'FF23'],
		[-220, '24', 'FF24'],
		[-219, '25', 'FF25'],
		[-218, '26', 'FF26'],
		[-217, '27', 'FF27'],
		[-216, '28', 'FF28'],
		[-215, '29', 'FF29'],
		[-214, '2A', 'FF2A'],
		[-213, '2B', 'FF2B'],
		[-212, '2C', 'FF2C'],
		[-211, '2D', 'FF2D'],
		[-210, '2E', 'FF2E'],
		[-209, '2F', 'FF2F'],
		[-208, '30', 'FF30'],
		[-207, '31', 'FF31'],
		[-206, '32', 'FF32'],
		[-205, '33', 'FF33'],
		[-204, '34', 'FF34'],
		[-203, '35', 'FF35'],
		[-202, '36', 'FF36'],
		[-201, '37', 'FF37'],
		[-200, '38', 'FF38'],
		[-199, '39', 'FF39'],
		[-198, '3A', 'FF3A'],
		[-197, '3B', 'FF3B'],
		[-196, '3C', 'FF3C'],
		[-195, '3D', 'FF3D'],
		[-194, '3E', 'FF3E'],
		[-193, '3F', 'FF3F'],
		[-192, '40', 'FF40'],
		[-191, '41', 'FF41'],
		[-190, '42', 'FF42'],
		[-189, '43', 'FF43'],
		[-188, '44', 'FF44'],
		[-187, '45', 'FF45'],
		[-186, '46', 'FF46'],
		[-185, '47', 'FF47'],
		[-184, '48', 'FF48'],
		[-183, '49', 'FF49'],
		[-182, '4A', 'FF4A'],
		[-181, '4B', 'FF4B'],
		[-180, '4C', 'FF4C'],
		[-179, '4D', 'FF4D'],
		[-178, '4E', 'FF4E'],
		[-177, '4F', 'FF4F'],
		[-176, '50', 'FF50'],
		[-175, '51', 'FF51'],
		[-174, '52', 'FF52'],
		[-173, '53', 'FF53'],
		[-172, '54', 'FF54'],
		[-171, '55', 'FF55'],
		[-170, '56', 'FF56'],
		[-169, '57', 'FF57'],
		[-168, '58', 'FF58'],
		[-167, '59', 'FF59'],
		[-166, '5A', 'FF5A'],
		[-165, '5B', 'FF5B'],
		[-164, '5C', 'FF5C'],
		[-163, '5D', 'FF5D'],
		[-162, '5E', 'FF5E'],
		[-161, '5F', 'FF5F'],
		[-160, '60', 'FF60'],
		[-159, '61', 'FF61'],
		[-158, '62', 'FF62'],
		[-157, '63', 'FF63'],
		[-156, '64', 'FF64'],
		[-155, '65', 'FF65'],
		[-154, '66', 'FF66'],
		[-153, '67', 'FF67'],
		[-152, '68', 'FF68'],
		[-151, '69', 'FF69'],
		[-150, '6A', 'FF6A'],
		[-149, '6B', 'FF6B'],
		[-148, '6C', 'FF6C'],
		[-147, '6D', 'FF6D'],
		[-146, '6E', 'FF6E'],
		[-145, '6F', 'FF6F'],
		[-144, '70', 'FF70'],
		[-143, '71', 'FF71'],
		[-142, '72', 'FF72'],
		[-141, '73', 'FF73'],
		[-140, '74', 'FF74'],
		[-139, '75', 'FF75'],
		[-138, '76', 'FF76'],
		[-137, '77', 'FF77'],
		[-136, '78', 'FF78'],
		[-135, '79', 'FF79'],
		[-134, '7A', 'FF7A'],
		[-133, '7B', 'FF7B'],
		[-132, '7C', 'FF7C'],
		[-131, '7D', 'FF7D'],
		[-130, '7E', 'FF7E'],
		[-129, '7F', 'FF7F'],
		[-128, '80', '80'],
		[-127, '81', '81'],
		[-126, '82', '82'],
		[-125, '83', '83'],
		[-124, '84', '84'],
		[-123, '85', '85'],
		[-122, '86', '86'],
		[-121, '87', '87'],
		[-120, '88', '88'],
		[-119, '89', '89'],
		[-118, '8A', '8A'],
		[-117, '8B', '8B'],
		[-116, '8C', '8C'],
		[-115, '8D', '8D'],
		[-114, '8E', '8E'],
		[-113, '8F', '8F'],
		[-112, '90', '90'],
		[-111, '91', '91'],
		[-110, '92', '92'],
		[-109, '93', '93'],
		[-108, '94', '94'],
		[-107, '95', '95'],
		[-106, '96', '96'],
		[-105, '97', '97'],
		[-104, '98', '98'],
		[-103, '99', '99'],
		[-102, '9A', '9A'],
		[-101, '9B', '9B'],
		[-100, '9C', '9C'],
		[-99, '9D', '9D'],
		[-98, '9E', '9E'],
		[-97, '9F', '9F'],
		[-96, 'A0', 'A0'],
		[-95, 'A1', 'A1'],
		[-94, 'A2', 'A2'],
		[-93, 'A3', 'A3'],
		[-92, 'A4', 'A4'],
		[-91, 'A5', 'A5'],
		[-90, 'A6', 'A6'],
		[-89, 'A7', 'A7'],
		[-88, 'A8', 'A8'],
		[-87, 'A9', 'A9'],
		[-86, 'AA', 'AA'],
		[-85, 'AB', 'AB'],
		[-84, 'AC', 'AC'],
		[-83, 'AD', 'AD'],
		[-82, 'AE', 'AE'],
		[-81, 'AF', 'AF'],
		[-80, 'B0', 'B0'],
		[-79, 'B1', 'B1'],
		[-78, 'B2', 'B2'],
		[-77, 'B3', 'B3'],
		[-76, 'B4', 'B4'],
		[-75, 'B5', 'B5'],
		[-74, 'B6', 'B6'],
		[-73, 'B7', 'B7'],
		[-72, 'B8', 'B8'],
		[-71, 'B9', 'B9'],
		[-70, 'BA', 'BA'],
		[-69, 'BB', 'BB'],
		[-68, 'BC', 'BC'],
		[-67, 'BD', 'BD'],
		[-66, 'BE', 'BE'],
		[-65, 'BF', 'BF'],
		[-64, 'C0', 'C0'],
		[-63, 'C1', 'C1'],
		[-62, 'C2', 'C2'],
		[-61, 'C3', 'C3'],
		[-60, 'C4', 'C4'],
		[-59, 'C5', 'C5'],
		[-58, 'C6', 'C6'],
		[-57, 'C7', 'C7'],
		[-56, 'C8', 'C8'],
		[-55, 'C9', 'C9'],
		[-54, 'CA', 'CA'],
		[-53, 'CB', 'CB'],
		[-52, 'CC', 'CC'],
		[-51, 'CD', 'CD'],
		[-50, 'CE', 'CE'],
		[-49, 'CF', 'CF'],
		[-48, 'D0', 'D0'],
		[-47, 'D1', 'D1'],
		[-46, 'D2', 'D2'],
		[-45, 'D3', 'D3'],
		[-44, 'D4', 'D4'],
		[-43, 'D5', 'D5'],
		[-42, 'D6', 'D6'],
		[-41, 'D7', 'D7'],
		[-40, 'D8', 'D8'],
		[-39, 'D9', 'D9'],
		[-38, 'DA', 'DA'],
		[-37, 'DB', 'DB'],
		[-36, 'DC', 'DC'],
		[-35, 'DD', 'DD'],
		[-34, 'DE', 'DE'],
		[-33, 'DF', 'DF'],
		[-32, 'E0', 'E0'],
		[-31, 'E1', 'E1'],
		[-30, 'E2', 'E2'],
		[-29, 'E3', 'E3'],
		[-28, 'E4', 'E4'],
		[-27, 'E5', 'E5'],
		[-26, 'E6', 'E6'],
		[-25, 'E7', 'E7'],
		[-24, 'E8', 'E8'],
		[-23, 'E9', 'E9'],
		[-22, 'EA', 'EA'],
		[-21, 'EB', 'EB'],
		[-20, 'EC', 'EC'],
		[-19, 'ED', 'ED'],
		[-18, 'EE', 'EE'],
		[-17, 'EF', 'EF'],
		[-16, 'F0', 'F0'],
		[-15, 'F1', 'F1'],
		[-14, 'F2', 'F2'],
		[-13, 'F3', 'F3'],
		[-12, 'F4', 'F4'],
		[-11, 'F5', 'F5'],
		[-10, 'F6', 'F6'],
		[-9, 'F7', 'F7'],
		[-8, 'F8', 'F8'],
		[-7, 'F9', 'F9'],
		[-6, 'FA', 'FA'],
		[-5, 'FB', 'FB'],
		[-4, 'FC', 'FC'],
		[-3, 'FD', 'FD'],
		[-2, 'FE', 'FE'],
		[-1, 'FF', 'FF'],
		[0, '00', '00'],
		[1, '01', '01'],
		[2, '02', '02'],
		[3, '03', '03'],
		[4, '04', '04'],
		[5, '05', '05'],
		[6, '06', '06'],
		[7, '07', '07'],
		[8, '08', '08'],
		[9, '09', '09'],
		[10, '0A', '0A'],
		[11, '0B', '0B'],
		[12, '0C', '0C'],
		[13, '0D', '0D'],
		[14, '0E', '0E'],
		[15, '0F', '0F'],
		[16, '10', '10'],
		[17, '11', '11'],
		[18, '12', '12'],
		[19, '13', '13'],
		[20, '14', '14'],
		[21, '15', '15'],
		[22, '16', '16'],
		[23, '17', '17'],
		[24, '18', '18'],
		[25, '19', '19'],
		[26, '1A', '1A'],
		[27, '1B', '1B'],
		[28, '1C', '1C'],
		[29, '1D', '1D'],
		[30, '1E', '1E'],
		[31, '1F', '1F'],
		[32, '20', '20'],
		[33, '21', '21'],
		[34, '22', '22'],
		[35, '23', '23'],
		[36, '24', '24'],
		[37, '25', '25'],
		[38, '26', '26'],
		[39, '27', '27'],
		[40, '28', '28'],
		[41, '29', '29'],
		[42, '2A', '2A'],
		[43, '2B', '2B'],
		[44, '2C', '2C'],
		[45, '2D', '2D'],
		[46, '2E', '2E'],
		[47, '2F', '2F'],
		[48, '30', '30'],
		[49, '31', '31'],
		[50, '32', '32'],
		[51, '33', '33'],
		[52, '34', '34'],
		[53, '35', '35'],
		[54, '36', '36'],
		[55, '37', '37'],
		[56, '38', '38'],
		[57, '39', '39'],
		[58, '3A', '3A'],
		[59, '3B', '3B'],
		[60, '3C', '3C'],
		[61, '3D', '3D'],
		[62, '3E', '3E'],
		[63, '3F', '3F'],
		[64, '40', '40'],
		[65, '41', '41'],
		[66, '42', '42'],
		[67, '43', '43'],
		[68, '44', '44'],
		[69, '45', '45'],
		[70, '46', '46'],
		[71, '47', '47'],
		[72, '48', '48'],
		[73, '49', '49'],
		[74, '4A', '4A'],
		[75, '4B', '4B'],
		[76, '4C', '4C'],
		[77, '4D', '4D'],
		[78, '4E', '4E'],
		[79, '4F', '4F'],
		[80, '50', '50'],
		[81, '51', '51'],
		[82, '52', '52'],
		[83, '53', '53'],
		[84, '54', '54'],
		[85, '55', '55'],
		[86, '56', '56'],
		[87, '57', '57'],
		[88, '58', '58'],
		[89, '59', '59'],
		[90, '5A', '5A'],
		[91, '5B', '5B'],
		[92, '5C', '5C'],
		[93, '5D', '5D'],
		[94, '5E', '5E'],
		[95, '5F', '5F'],
		[96, '60', '60'],
		[97, '61', '61'],
		[98, '62', '62'],
		[99, '63', '63'],
		[100, '64', '64'],
		[101, '65', '65'],
		[102, '66', '66'],
		[103, '67', '67'],
		[104, '68', '68'],
		[105, '69', '69'],
		[106, '6A', '6A'],
		[107, '6B', '6B'],
		[108, '6C', '6C'],
		[109, '6D', '6D'],
		[110, '6E', '6E'],
		[111, '6F', '6F'],
		[112, '70', '70'],
		[113, '71', '71'],
		[114, '72', '72'],
		[115, '73', '73'],
		[116, '74', '74'],
		[117, '75', '75'],
		[118, '76', '76'],
		[119, '77', '77'],
		[120, '78', '78'],
		[121, '79', '79'],
		[122, '7A', '7A'],
		[123, '7B', '7B'],
		[124, '7C', '7C'],
		[125, '7D', '7D'],
		[126, '7E', '7E'],
		[127, '7F', '7F'],
		[128, '80', '0080'],
		[129, '81', '0081'],
		[130, '82', '0082'],
		[131, '83', '0083'],
		[132, '84', '0084'],
		[133, '85', '0085'],
		[134, '86', '0086'],
		[135, '87', '0087'],
		[136, '88', '0088'],
		[137, '89', '0089'],
		[138, '8A', '008A'],
		[139, '8B', '008B'],
		[140, '8C', '008C'],
		[141, '8D', '008D'],
		[142, '8E', '008E'],
		[143, '8F', '008F'],
		[144, '90', '0090'],
		[145, '91', '0091'],
		[146, '92', '0092'],
		[147, '93', '0093'],
		[148, '94', '0094'],
		[149, '95', '0095'],
		[150, '96', '0096'],
		[151, '97', '0097'],
		[152, '98', '0098'],
		[153, '99', '0099'],
		[154, '9A', '009A'],
		[155, '9B', '009B'],
		[156, '9C', '009C'],
		[157, '9D', '009D'],
		[158, '9E', '009E'],
		[159, '9F', '009F'],
		[160, 'A0', '00A0'],
		[161, 'A1', '00A1'],
		[162, 'A2', '00A2'],
		[163, 'A3', '00A3'],
		[164, 'A4', '00A4'],
		[165, 'A5', '00A5'],
		[166, 'A6', '00A6'],
		[167, 'A7', '00A7'],
		[168, 'A8', '00A8'],
		[169, 'A9', '00A9'],
		[170, 'AA', '00AA'],
		[171, 'AB', '00AB'],
		[172, 'AC', '00AC'],
		[173, 'AD', '00AD'],
		[174, 'AE', '00AE'],
		[175, 'AF', '00AF'],
		[176, 'B0', '00B0'],
		[177, 'B1', '00B1'],
		[178, 'B2', '00B2'],
		[179, 'B3', '00B3'],
		[180, 'B4', '00B4'],
		[181, 'B5', '00B5'],
		[182, 'B6', '00B6'],
		[183, 'B7', '00B7'],
		[184, 'B8', '00B8'],
		[185, 'B9', '00B9'],
		[186, 'BA', '00BA'],
		[187, 'BB', '00BB'],
		[188, 'BC', '00BC'],
		[189, 'BD', '00BD'],
		[190, 'BE', '00BE'],
		[191, 'BF', '00BF'],
		[192, 'C0', '00C0'],
		[193, 'C1', '00C1'],
		[194, 'C2', '00C2'],
		[195, 'C3', '00C3'],
		[196, 'C4', '00C4'],
		[197, 'C5', '00C5'],
		[198, 'C6', '00C6'],
		[199, 'C7', '00C7'],
		[200, 'C8', '00C8'],
		[201, 'C9', '00C9'],
		[202, 'CA', '00CA'],
		[203, 'CB', '00CB'],
		[204, 'CC', '00CC'],
		[205, 'CD', '00CD'],
		[206, 'CE', '00CE'],
		[207, 'CF', '00CF'],
		[208, 'D0', '00D0'],
		[209, 'D1', '00D1'],
		[210, 'D2', '00D2'],
		[211, 'D3', '00D3'],
		[212, 'D4', '00D4'],
		[213, 'D5', '00D5'],
		[214, 'D6', '00D6'],
		[215, 'D7', '00D7'],
		[216, 'D8', '00D8'],
		[217, 'D9', '00D9'],
		[218, 'DA', '00DA'],
		[219, 'DB', '00DB'],
		[220, 'DC', '00DC'],
		[221, 'DD', '00DD'],
		[222, 'DE', '00DE'],
		[223, 'DF', '00DF'],
		[224, 'E0', '00E0'],
		[225, 'E1', '00E1'],
		[226, 'E2', '00E2'],
		[227, 'E3', '00E3'],
		[228, 'E4', '00E4'],
		[229, 'E5', '00E5'],
		[230, 'E6', '00E6'],
		[231, 'E7', '00E7'],
		[232, 'E8', '00E8'],
		[233, 'E9', '00E9'],
		[234, 'EA', '00EA'],
		[235, 'EB', '00EB'],
		[236, 'EC', '00EC'],
		[237, 'ED', '00ED'],
		[238, 'EE', '00EE'],
		[239, 'EF', '00EF'],
		[240, 'F0', '00F0'],
		[241, 'F1', '00F1'],
		[242, 'F2', '00F2'],
		[243, 'F3', '00F3'],
		[244, 'F4', '00F4'],
		[245, 'F5', '00F5'],
		[246, 'F6', '00F6'],
		[247, 'F7', '00F7'],
		[248, 'F8', '00F8'],
		[249, 'F9', '00F9'],
		[250, 'FA', '00FA'],
		[251, 'FB', '00FB'],
		[252, 'FC', '00FC'],
		[253, 'FD', '00FD'],
		[254, 'FE', '00FE'],
		[255, 'FF', '00FF'],
		[256, '00', '0100'],
	])('%s padHex(%s) === %s', (i, _hex, expected) => {
		const bigInt = new BigInteger();
		bigInt.fromInt(i);

		const x = instance.padHex(bigInt);

		expect(x.toLowerCase()).toBe(expected.toLowerCase());
	});
});
