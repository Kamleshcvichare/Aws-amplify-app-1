import resolve from 'rollup-plugin-node-resolve';
import commonjs from 'rollup-plugin-commonjs';
import typescript from 'rollup-plugin-typescript2';
import json from 'rollup-plugin-json';

let override = { compilerOptions: { "module": "ES2015", "declaration": false } };

export default {
    input: 'src/Auth/index.ts',
    output: [
        {
            file: 'dist/aws-amplify-auth.umd.js',
            format: 'umd',
            name: 'awsAmplifyAuth'
        },
        {
            file: 'dist/aws-amplify-auth.cjs.js',
            format: 'cjs'
        },
        {
            file: 'dist/aws-amplify-auth.es.js',
            format: 'es'
        },
        {
            file: 'dist/aws-amplify-auth.iife.js',
            format: 'iife',
            name: 'awsAmplifyAuth'
        }
    ],
    external: [
        'fs',
        'crypto',
        'domain',
        'stream',
        'times',
        'https',
        'http',
        'path',
        'os',
        'times'
    ],
    plugins: [ 
        typescript({
            tsconfig: 'tsconfig.json',
            tsconfigOverride: override
        }),
        resolve({
            extensions: ['.js']
        }),
        json(),
        commonjs({
            // exclude: ['../../node_modules/graphql/index.mjs'],
            extensions: ['.js', '.json'],
            namedExports: { 
                'uuid': ['v1', 'v4'], 
                '../../node_modules/graphql/error/index.js': ['GraphQLError', 'formatError', 'printError'],
                'paho-mqtt': ['Client', 'Message'],
                '../../node_modules/graphql/type/index.js': [
                    'GraphQLSchema',
                    'GraphQLScalarType', 
                    'GraphQLObjectType', 
                    'GraphQLInterfaceType', 
                    'GraphQLUnionType', 
                    'GraphQLEnumType', 
                    'GraphQLInputObjectType', 
                    'GraphQLList', 
                    'GraphQLNonNull', 
                    'GraphQLDirective',
                    'TypeKind',
                    'specifiedScalarTypes', 
                    'GraphQLInt',
                    'GraphQLFloat', 
                    'GraphQLString', 
                    'GraphQLBoolean', 
                    'GraphQLID',
                    'specifiedDirectives', 
                    'GraphQLIncludeDirective', 
                    'GraphQLSkipDirective', 
                    'GraphQLDeprecatedDirective',
                    'DEFAULT_DEPRECATION_REASON',
                    'SchemaMetaFieldDef', 
                    'TypeMetaFieldDef', 
                    'TypeNameMetaFieldDef',
                    'introspectionTypes', 
                    '__Schema', 
                    '__Directive', 
                    '__DirectiveLocation', 
                    '__Type', 
                    '__Field', 
                    '__InputValue', 
                    '__EnumValue', 
                    '__TypeKind',
                    'isSchema', 
                    'isDirective', 
                    'isType', 
                    'isScalarType', 
                    'isObjectType', 
                    'isInterfaceType', 
                    'isUnionType', 
                    'isEnumType', 
                    'isInputObjectType', 
                    'isListType', 
                    'isNonNullType', 
                    'isInputType', 
                    'isOutputType', 
                    'isLeafType', 
                    'isCompositeType', 
                    'isAbstractType', 
                    'isWrappingType', 
                    'isNullableType', 
                    'isNamedType', 
                    'isSpecifiedScalarType', 
                    'isIntrospectionType', 
                    'isSpecifiedDirective',
                    'assertType', 
                    'assertScalarType', 
                    'assertObjectType', 
                    'assertInterfaceType', 
                    'assertUnionType', 
                    'assertEnumType', 
                    'assertInputObjectType', 
                    'assertListType', 
                    'assertNonNullType', 
                    'assertInputType', 
                    'assertOutputType', 
                    'assertLeafType', 
                    'assertCompositeType', 
                    'assertAbstractType', 
                    'assertWrappingType', 
                    'assertNullableType', 
                    'assertNamedType',
                    'getNullableType', 
                    'getNamedType',
                    'validateSchema', 
                    'assertValidSchema'
                ],
                '../../node_modules/graphql/language/index.js': [
                    'Source', 
                    'getLocation',
                    'parse', 
                    'parseValue', 
                    'parseType',
                    'print',
                    'visit', 
                    'visitInParallel', 
                    'visitWithTypeInfo', 
                    'getVisitFn', 
                    'Kind', 
                    'TokenKind', 
                    'DirectiveLocation', 
                    'BREAK' 
                ],
                '../../node_modules/graphql/subscription/index.js': [
                    'subscribe', 
                    'createSourceEventStream'
                ],
                '../../node_modules/graphql/execution/index.js': [
                    'execute', 
                    'defaultFieldResolver', 
                    'responsePathAsArray', 
                    'getDirectiveValues'
                ],
                '../../node_modules/graphql/validation/index.js': [
                    'validate', 
                    'ValidationContext',
                    'specifiedRules',
                    'FieldsOnCorrectTypeRule', 
                    'FragmentsOnCompositeTypesRule', 
                    'KnownArgumentNamesRule', 
                    'KnownDirectivesRule', 
                    'KnownFragmentNamesRule', 
                    'KnownTypeNamesRule', 
                    'LoneAnonymousOperationRule', 
                    'NoFragmentCyclesRule', 
                    'NoUndefinedVariablesRule', 
                    'NoUnusedFragmentsRule',
                    'NoUnusedVariablesRule', 
                    'OverlappingFieldsCanBeMergedRule', 
                    'PossibleFragmentSpreadsRule', 
                    'ProvidedNonNullArgumentsRule', 
                    'ScalarLeafsRule', 
                    'SingleFieldSubscriptionsRule', 
                    'UniqueArgumentNamesRule', 
                    'UniqueDirectivesPerLocationRule', 
                    'UniqueFragmentNamesRule', 
                    'UniqueInputFieldNamesRule', 
                    'UniqueOperationNamesRule', 
                    'UniqueVariableNamesRule', 
                    'ValuesOfCorrectTypeRule', 
                    'VariablesAreInputTypesRule', 
                    'VariablesDefaultValueAllowedRule', 
                    'VariablesInAllowedPositionRule' 
                ],
                '../../node_modules/graphql/utilities/index.js': [
                    'getIntrospectionQuery',
                    'introspectionQuery',
                    'getOperationAST',
                    'introspectionFromSchema',
                    'buildClientSchema',
                    'buildASTSchema',
                    'buildSchema',
                    'getDescription',
                    'extendSchema',
                    'lexicographicSortSchema',
                    'printSchema',
                    'printIntrospectionSchema',
                    'printType',
                    'typeFromAST',
                    'valueFromAST',
                    'valueFromASTUntyped',
                    'astFromValue',
                    'TypeInfo',
                    'coerceValue',
                    'isValidJSValue',
                    'isValidLiteralValue',
                    'concatAST',
                    'separateOperations',
                    'isEqualType', 
                    'isTypeSubTypeOf', 
                    'doTypesOverlap',
                    'assertValidName',
                    'isValidNameError',
                    'findBreakingChanges', 
                    'findDangerousChanges', 
                    'BreakingChangeType', 
                    'DangerousChangeType',
                    'findDeprecatedUsages'
                ]
            }
        })    
    ]
};