{"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AWS, ConsoleLogger as Logger } from '../Common';\r\nvar logger = new Logger('Signer'), url = require('url'), crypto = AWS['util'].crypto;\r\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\r\nvar encrypt = function (key, src, encoding) {\r\n    return crypto.lib.createHmac('sha256', key).update(src, 'utf8').digest(encoding);\r\n};\r\nvar hash = function (src) {\r\n    var arg = src || '';\r\n    return crypto.createHash('sha256').update(arg, 'utf8').digest('hex');\r\n};\r\n/**\r\n* @private\r\n* Create canonical headers\r\n*\r\n<pre>\r\nCanonicalHeaders =\r\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\r\nCanonicalHeadersEntry =\r\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\r\n</pre>\r\n*/\r\nvar canonical_headers = function (headers) {\r\n    if (!headers || Object.keys(headers).length === 0) {\r\n        return '';\r\n    }\r\n    return Object.keys(headers)\r\n        .map(function (key) {\r\n        return {\r\n            key: key.toLowerCase(),\r\n            value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : ''\r\n        };\r\n    })\r\n        .sort(function (a, b) {\r\n        return a.key < b.key ? -1 : 1;\r\n    })\r\n        .map(function (item) {\r\n        return item.key + ':' + item.value;\r\n    })\r\n        .join('\\n') + '\\n';\r\n};\r\n/**\r\n* List of header keys included in the canonical headers.\r\n* @access private\r\n*/\r\nvar signed_headers = function (headers) {\r\n    return Object.keys(headers)\r\n        .map(function (key) { return key.toLowerCase(); })\r\n        .sort()\r\n        .join(';');\r\n};\r\n/**\r\n* @private\r\n* Create canonical request\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\r\n*\r\n<pre>\r\nCanonicalRequest =\r\n    HTTPRequestMethod + '\\n' +\r\n    CanonicalURI + '\\n' +\r\n    CanonicalQueryString + '\\n' +\r\n    CanonicalHeaders + '\\n' +\r\n    SignedHeaders + '\\n' +\r\n    HexEncode(Hash(RequestPayload))\r\n</pre>\r\n*/\r\nvar canonical_request = function (request) {\r\n    var url_info = url.parse(request.url);\r\n    var sorted_query = url_info.query\r\n        ? url_info.query.split('&').sort(function (a, b) { return a < b ? -1 : 1; }).join('&')\r\n        : '';\r\n    return [\r\n        request.method || '/',\r\n        url_info.pathname,\r\n        sorted_query,\r\n        canonical_headers(request.headers),\r\n        signed_headers(request.headers),\r\n        hash(request.data)\r\n    ].join('\\n');\r\n};\r\nvar parse_service_info = function (request) {\r\n    var url_info = url.parse(request.url), host = url_info.host;\r\n    var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\r\n    var parsed = (matched || []).slice(1, 3);\r\n    if (parsed[1] === 'es') {\r\n        parsed = parsed.reverse();\r\n    }\r\n    return {\r\n        service: request.service || parsed[0],\r\n        region: request.region || parsed[1]\r\n    };\r\n};\r\nvar credential_scope = function (d_str, region, service) {\r\n    return [\r\n        d_str,\r\n        region,\r\n        service,\r\n        'aws4_request',\r\n    ].join('/');\r\n};\r\n/**\r\n* @private\r\n* Create a string to sign\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\r\n*\r\n<pre>\r\nStringToSign =\r\n    Algorithm + \\n +\r\n    RequestDateTime + \\n +\r\n    CredentialScope + \\n +\r\n    HashedCanonicalRequest\r\n</pre>\r\n*/\r\nvar string_to_sign = function (algorithm, canonical_request, dt_str, scope) {\r\n    return [\r\n        algorithm,\r\n        dt_str,\r\n        scope,\r\n        hash(canonical_request)\r\n    ].join('\\n');\r\n};\r\n/**\r\n* @private\r\n* Create signing key\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\r\n*\r\n<pre>\r\nkSecret = your secret access key\r\nkDate = HMAC(\"AWS4\" + kSecret, Date)\r\nkRegion = HMAC(kDate, Region)\r\nkService = HMAC(kRegion, Service)\r\nkSigning = HMAC(kService, \"aws4_request\")\r\n</pre>\r\n*/\r\nvar get_signing_key = function (secret_key, d_str, service_info) {\r\n    logger.debug(service_info);\r\n    var k = ('AWS4' + secret_key), k_date = encrypt(k, d_str), k_region = encrypt(k_date, service_info.region), k_service = encrypt(k_region, service_info.service), k_signing = encrypt(k_service, 'aws4_request');\r\n    return k_signing;\r\n};\r\nvar get_signature = function (signing_key, str_to_sign) {\r\n    return encrypt(signing_key, str_to_sign, 'hex');\r\n};\r\n/**\r\n* @private\r\n* Create authorization header\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\r\n*/\r\nvar get_authorization_header = function (algorithm, access_key, scope, signed_headers, signature) {\r\n    return [\r\n        algorithm + ' ' + 'Credential=' + access_key + '/' + scope,\r\n        'SignedHeaders=' + signed_headers,\r\n        'Signature=' + signature\r\n    ].join(', ');\r\n};\r\n/**\r\n* Sign a HTTP request, add 'Authorization' header to request param\r\n* @method sign\r\n* @memberof Signer\r\n* @static\r\n*\r\n* @param {object} request - HTTP request object\r\n<pre>\r\nrequest: {\r\n    method: GET | POST | PUT ...\r\n    url: ...,\r\n    headers: {\r\n        header1: ...\r\n    },\r\n    data: data\r\n}\r\n</pre>\r\n* @param {object} access_info - AWS access credential info\r\n<pre>\r\naccess_info: {\r\n    access_key: ...,\r\n    secret_key: ...,\r\n    session_token: ...\r\n}\r\n</pre>\r\n* @param {object} [service_info] - AWS service type and region, optional,\r\n*                                  if not provided then parse out from url\r\n<pre>\r\nservice_info: {\r\n    service: ...,\r\n    region: ...\r\n}\r\n</pre>\r\n*\r\n* @returns {object} Signed HTTP request\r\n*/\r\nvar sign = function (request, access_info, service_info) {\r\n    if (service_info === void 0) { service_info = null; }\r\n    request.headers = request.headers || {};\r\n    // datetime string and date string\r\n    var dt = new Date(), dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''), d_str = dt_str.substr(0, 8);\r\n    var url_info = url.parse(request.url);\r\n    request.headers['host'] = url_info.host;\r\n    request.headers['x-amz-date'] = dt_str;\r\n    if (access_info.session_token) {\r\n        request.headers['X-Amz-Security-Token'] = access_info.session_token;\r\n    }\r\n    // Task 1: Create a Canonical Request\r\n    var request_str = canonical_request(request);\r\n    logger.debug(request_str);\r\n    // Task 2: Create a String to Sign\r\n    var serviceInfo = service_info || parse_service_info(request), scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service), str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope);\r\n    // Task 3: Calculate the Signature\r\n    var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo), signature = get_signature(signing_key, str_to_sign);\r\n    // Task 4: Adding the Signing information to the Request\r\n    var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\r\n    request.headers['Authorization'] = authorization_header;\r\n    return request;\r\n};\r\nvar signUrl = function (urlToSign, accessInfo, serviceInfo, expiration) {\r\n    var now = new Date().toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\r\n    var today = now.substr(0, 8);\r\n    var parsedUrl = url.parse(urlToSign, true, true);\r\n    var host = parsedUrl.host;\r\n    var signedHeaders = { host: host };\r\n    var _a = serviceInfo || parse_service_info({ url: url.format(parsedUrl) }), region = _a.region, service = _a.service;\r\n    var credentialScope = credential_scope(today, region, service);\r\n    var queryParams = tslib_1.__assign({ 'X-Amz-Algorithm': DEFAULT_ALGORITHM, 'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'), 'X-Amz-Date': now.substr(0, 16) }, (expiration && { 'X-Amz-Expires': \"\" + expiration }), { 'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',') });\r\n    var canonicalRequest = canonical_request({\r\n        method: 'GET',\r\n        url: url.format(tslib_1.__assign({}, parsedUrl, { query: tslib_1.__assign({}, parsedUrl.query, queryParams) })),\r\n        headers: signedHeaders,\r\n    });\r\n    var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\r\n    var signing_key = get_signing_key(accessInfo.secret_key, today, { region: region, service: service });\r\n    var signature = get_signature(signing_key, stringToSign);\r\n    var additionalQueryParams = tslib_1.__assign({ 'X-Amz-Signature': signature }, (accessInfo.session_token && { 'X-Amz-Security-Token': accessInfo.session_token }));\r\n    var result = url.format({\r\n        protocol: parsedUrl.protocol,\r\n        slashes: true,\r\n        hostname: parsedUrl.hostname,\r\n        pathname: parsedUrl.pathname,\r\n        query: tslib_1.__assign({}, parsedUrl.query, queryParams, additionalQueryParams)\r\n    });\r\n    return result;\r\n};\r\n/**\r\n* AWS request signer.\r\n* Refer to {@link http://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html|Signature Version 4}\r\n*\r\n* @class Signer\r\n*/\r\nvar Signer = /** @class */ (function () {\r\n    function Signer() {\r\n    }\r\n    Signer.sign = sign;\r\n    Signer.signUrl = signUrl;\r\n    return Signer;\r\n}());\r\nexport default Signer;\r\n//# sourceMappingURL=Signer.js.map","map":"{\"version\":3,\"file\":\"Signer.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/Common/Signer.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/wezhuo/workplace/aws-amplify/packages/aws-amplify/Common/Signer.d.ts","text":"/**\r\n* AWS request signer.\r\n* Refer to {@link http://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html|Signature Version 4}\r\n*\r\n* @class Signer\r\n*/\r\nexport default class Signer {\r\n    static sign: (request: any, access_info: any, service_info?: any) => any;\r\n    static signUrl: (urlToSign: String, accessInfo: any, serviceInfo?: any, expiration?: Number) => any;\r\n}\r\n"}}
