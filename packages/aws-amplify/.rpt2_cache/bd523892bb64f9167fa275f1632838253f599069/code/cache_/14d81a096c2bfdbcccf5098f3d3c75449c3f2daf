{"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n/**\r\n* Default cache config\r\n*/\r\nexport var defaultConfig = {\r\n    keyPrefix: 'aws-amplify-cache',\r\n    capacityInBytes: 1048576,\r\n    itemMaxSize: 210000,\r\n    defaultTTL: 259200000,\r\n    defaultPriority: 5,\r\n    warningThreshold: 0.8,\r\n    storage: (typeof window === 'undefined') ? null : window.localStorage\r\n};\r\n/**\r\n * return the byte size of the string\r\n * @param str\r\n */\r\nexport function getByteLength(str) {\r\n    var ret = 0;\r\n    ret = str.length;\r\n    for (var i = str.length; i >= 0; i -= 1) {\r\n        var charCode = str.charCodeAt(i);\r\n        if (charCode > 0x7f && charCode <= 0x7ff) {\r\n            ret += 1;\r\n        }\r\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\r\n            ret += 2;\r\n        }\r\n        // trail surrogate\r\n        if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\r\n            i -= 1;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * get current time\r\n */\r\nexport function getCurrTime() {\r\n    var currTime = new Date();\r\n    return currTime.getTime();\r\n}\r\n/**\r\n * check if passed value is an integer\r\n */\r\nexport function isInteger(value) {\r\n    if (Number.isInteger) {\r\n        return Number.isInteger(value);\r\n    }\r\n    return _isInteger(value);\r\n}\r\nfunction _isInteger(value) {\r\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\r\n}\r\n//# sourceMappingURL=CacheUtils.js.map","map":"{\"version\":3,\"file\":\"CacheUtils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/Cache/Utils/CacheUtils.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;GAWG;AAKH;;EAEE;AACF,MAAM,CAAC,IAAM,aAAa,GAAgB;IACtC,SAAS,EAAE,mBAAmB;IAC9B,eAAe,EAAE,OAAO;IACxB,WAAW,EAAE,MAAM;IACnB,UAAU,EAAE,SAAS;IACrB,eAAe,EAAE,CAAC;IAClB,gBAAgB,EAAE,GAAG;IACrB,OAAO,EAAE,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY;CACxE,CAAC;AAEF;;;GAGG;AACH,MAAM,wBAAwB,GAAW;IACrC,IAAI,GAAG,GAAW,CAAC,CAAC;IACpB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IAEjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;QACtC,IAAM,QAAQ,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,IAAI,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC;YACvC,GAAG,IAAI,CAAC,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,KAAK,IAAI,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;YAChD,GAAG,IAAI,CAAC,CAAC;QACb,CAAC;QACD,kBAAkB;QAClB,EAAE,CAAC,CAAC,QAAQ,IAAI,MAAM,IAAI,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;YAC3C,CAAC,IAAI,CAAC,CAAC;QACX,CAAC;IACL,CAAC;IAED,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AAED;;GAEG;AACH,MAAM;IACF,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;IAC5B,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;AAC9B,CAAC;AAED;;GAEG;AACH,MAAM,oBAAoB,KAAK;IAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED,oBAAoB,KAAK;IACrB,MAAM,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACvF,CAAC\"}","dts":{"name":"/Users/wezhuo/workplace/aws-amplify/packages/aws-amplify/Cache/Utils/CacheUtils.d.ts","text":"import { CacheConfig } from '../types';\r\n/**\r\n* Default cache config\r\n*/\r\nexport declare const defaultConfig: CacheConfig;\r\n/**\r\n * return the byte size of the string\r\n * @param str\r\n */\r\nexport declare function getByteLength(str: string): number;\r\n/**\r\n * get current time\r\n */\r\nexport declare function getCurrTime(): number;\r\n/**\r\n * check if passed value is an integer\r\n */\r\nexport declare function isInteger(value: any): boolean;\r\n"}}
