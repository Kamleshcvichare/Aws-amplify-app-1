// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

/**
 * Generated by scripts/dts-bundler/README.md
 */

import { MetadataBearer as __MetadataBearer } from '@aws-sdk/types';

declare const ChecksumAlgorithm: {
	readonly CRC32: 'CRC32';
	readonly CRC32C: 'CRC32C';
	readonly SHA1: 'SHA1';
	readonly SHA256: 'SHA256';
};
declare const EncodingType: {
	readonly url: 'url';
};
declare const ObjectStorageClass: {
	readonly DEEP_ARCHIVE: 'DEEP_ARCHIVE';
	readonly GLACIER: 'GLACIER';
	readonly GLACIER_IR: 'GLACIER_IR';
	readonly INTELLIGENT_TIERING: 'INTELLIGENT_TIERING';
	readonly ONEZONE_IA: 'ONEZONE_IA';
	readonly OUTPOSTS: 'OUTPOSTS';
	readonly REDUCED_REDUNDANCY: 'REDUCED_REDUNDANCY';
	readonly SNOW: 'SNOW';
	readonly STANDARD: 'STANDARD';
	readonly STANDARD_IA: 'STANDARD_IA';
};
declare const RequestPayer: {
	readonly requester: 'requester';
};
/**
 * @public
 * <p>Container for all (if there are any) keys between Prefix and the next occurrence of the
 *          string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in
 *          the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter
 *          is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. </p>
 */
export interface CommonPrefix {
	/**
	 * <p>Container for the specified common prefix.</p>
	 */
	Prefix?: string;
}
/**
 * @public
 *
 * The input for {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandInput extends ListObjectsV2Request {}
/**
 * @public
 *
 * The output of {@link ListObjectsV2Command}.
 */
export interface ListObjectsV2CommandOutput
	extends ListObjectsV2Output,
		__MetadataBearer {}
/**
 * @public
 */
export interface ListObjectsV2Output {
	/**
	 * <p>Set to false if all of the results were returned. Set to true if more keys are available
	 *          to return. If the number of results exceeds that specified by MaxKeys, all of the results
	 *          might not be returned.</p>
	 */
	IsTruncated?: boolean;
	/**
	 * <p>Metadata about each object returned.</p>
	 */
	Contents?: _Object[];
	/**
	 * <p>The bucket name.</p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 */
	Name?: string;
	/**
	 * <p> Keys that begin with the indicated prefix.</p>
	 */
	Prefix?: string;
	/**
	 * <p>Causes keys that contain the same string between the prefix and the first occurrence of
	 *          the delimiter to be rolled up into a single result element in the CommonPrefixes
	 *          collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up
	 *          result counts as only one return against the <code>MaxKeys</code> value.</p>
	 */
	Delimiter?: string;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 */
	MaxKeys?: number;
	/**
	 * <p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return
	 *          when calculating the number of returns.</p>
	 *          <p>A response can contain <code>CommonPrefixes</code> only if you specify a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> contains all (if there are any) keys between
	 *             <code>Prefix</code> and the next occurrence of the string specified by a
	 *          delimiter.</p>
	 *          <p>
	 *             <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory
	 *          specified by <code>Prefix</code>.</p>
	 *          <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash
	 *             (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is
	 *             <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a
	 *          single return when calculating the number of returns. </p>
	 */
	CommonPrefixes?: CommonPrefix[];
	/**
	 * <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>
	 *          <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the
	 *          response, and returns encoded key name values in the following response elements:</p>
	 *          <p>
	 *             <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>
	 */
	EncodingType?: EncodingType | string;
	/**
	 * <p>KeyCount is the number of keys returned with this request. KeyCount will always be less
	 *          than or equal to the <code>MaxKeys</code> field. Say you ask for 50 keys, your result will
	 *          include 50 keys or fewer.</p>
	 */
	KeyCount?: number;
	/**
	 * <p> If ContinuationToken was sent with the request, it is included in the response.</p>
	 */
	ContinuationToken?: string;
	/**
	 * <p>
	 *             <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which
	 *          means there are more keys in the bucket that can be listed. The next list requests to Amazon S3
	 *          can be continued with this <code>NextContinuationToken</code>.
	 *             <code>NextContinuationToken</code> is obfuscated and is not a real key</p>
	 */
	NextContinuationToken?: string;
	/**
	 * <p>If StartAfter was sent with the request, it is included in the response.</p>
	 */
	StartAfter?: string;
}
/**
 * @public
 */
export interface ListObjectsV2Request {
	/**
	 * <p>Bucket name to list. </p>
	 *          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
	 *          <p>When you use this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code>
	 *                <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When you use this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts access point ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">What is S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
	 * <p>Note: To supply the Multi-region Access Point (MRAP) to Bucket, you need to install the "@aws-sdk/signature-v4-crt" package to your project dependencies.
	 * For more information, please go to https://github.com/aws/aws-sdk-js-v3#known-issues</p>
	 */
	Bucket: string | undefined;
	/**
	 * <p>A delimiter is a character you use to group keys.</p>
	 */
	Delimiter?: string;
	/**
	 * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>
	 */
	EncodingType?: EncodingType | string;
	/**
	 * <p>Sets the maximum number of keys returned in the response. By default the action returns
	 *          up to 1,000 key names. The response might contain fewer keys but will never contain
	 *          more.</p>
	 */
	MaxKeys?: number;
	/**
	 * <p>Limits the response to keys that begin with the specified prefix.</p>
	 */
	Prefix?: string;
	/**
	 * <p>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a
	 *          token. ContinuationToken is obfuscated and is not a real key.</p>
	 */
	ContinuationToken?: string;
	/**
	 * <p>The owner field is not present in listV2 by default, if you want to return owner field
	 *          with each key in the result then set the fetch owner field to true.</p>
	 */
	FetchOwner?: boolean;
	/**
	 * <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this
	 *          specified key. StartAfter can be any key in the bucket.</p>
	 */
	StartAfter?: string;
	/**
	 * <p>Confirms that the requester knows that she or he will be charged for the list objects
	 *          request in V2 style. Bucket owners need not specify this parameter in their
	 *          requests.</p>
	 */
	RequestPayer?: RequestPayer | string;
	/**
	 * <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
	 */
	ExpectedBucketOwner?: string;
}
/**
 * @public
 * <p>Container for the owner's display name and ID.</p>
 */
export interface Owner {
	/**
	 * <p>Container for the display name of the owner. This value is only supported in the
	 *          following Amazon Web Services Regions:</p>
	 *          <ul>
	 *             <li>
	 *                <p>US East (N. Virginia)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (N. California)</p>
	 *             </li>
	 *             <li>
	 *                <p>US West (Oregon)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Singapore)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Sydney)</p>
	 *             </li>
	 *             <li>
	 *                <p>Asia Pacific (Tokyo)</p>
	 *             </li>
	 *             <li>
	 *                <p>Europe (Ireland)</p>
	 *             </li>
	 *             <li>
	 *                <p>South America (São Paulo)</p>
	 *             </li>
	 *          </ul>
	 */
	DisplayName?: string;
	/**
	 * <p>Container for the ID of the owner.</p>
	 */
	ID?: string;
}
/**
 * @public
 * <p>An object consists of data and its descriptive metadata.</p>
 */
export interface _Object {
	/**
	 * <p>The name that you assign to an object. You use the object key to retrieve the
	 *          object.</p>
	 */
	Key?: string;
	/**
	 * <p>Creation date of the object.</p>
	 */
	LastModified?: Date;
	/**
	 * <p>The entity tag is a hash of the object. The ETag reflects changes only to the contents
	 *          of an object, not its metadata. The ETag may or may not be an MD5 digest of the object
	 *          data. Whether or not it is depends on how the object was created and how it is encrypted as
	 *          described below:</p>
	 *          <ul>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that
	 *                are an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the
	 *                Amazon Web Services Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are
	 *                not an MD5 digest of their object data.</p>
	 *             </li>
	 *             <li>
	 *                <p>If an object is created by either the Multipart Upload or Part Copy operation, the
	 *                ETag is not an MD5 digest, regardless of the method of encryption. If an object is
	 *                larger than 16 MB, the Amazon Web Services Management Console will upload or copy that object as a
	 *                Multipart Upload, and therefore the ETag will not be an MD5 digest.</p>
	 *             </li>
	 *          </ul>
	 */
	ETag?: string;
	/**
	 * <p>The algorithm that was used to create a checksum of the object.</p>
	 */
	ChecksumAlgorithm?: (ChecksumAlgorithm | string)[];
	/**
	 * <p>Size in bytes of the object</p>
	 */
	Size?: number;
	/**
	 * <p>The class of storage used to store the object.</p>
	 */
	StorageClass?: ObjectStorageClass | string;
	/**
	 * <p>The owner of the object</p>
	 */
	Owner?: Owner;
}
/**
 * @public
 */
export type ChecksumAlgorithm =
	(typeof ChecksumAlgorithm)[keyof typeof ChecksumAlgorithm];
/**
 * @public
 */
export type EncodingType = (typeof EncodingType)[keyof typeof EncodingType];
/**
 * @public
 */
export type ObjectStorageClass =
	(typeof ObjectStorageClass)[keyof typeof ObjectStorageClass];
/**
 * @public
 */
export type RequestPayer = (typeof RequestPayer)[keyof typeof RequestPayer];

export {};
