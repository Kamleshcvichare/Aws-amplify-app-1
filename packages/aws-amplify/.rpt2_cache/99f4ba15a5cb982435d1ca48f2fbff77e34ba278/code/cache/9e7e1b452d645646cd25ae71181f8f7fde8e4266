{"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AWS, S3, ConsoleLogger as Logger, Hub } from '../Common';\r\nimport Auth from '../Auth';\r\nvar logger = new Logger('StorageClass');\r\nvar dispatchStorageEvent = function (track, attrs, metrics) {\r\n    if (track) {\r\n        Hub.dispatch('storage', { attrs: attrs, metrics: metrics }, 'Storage');\r\n    }\r\n};\r\n/**\r\n * Provide storage methods to use AWS S3\r\n */\r\nvar StorageClass = /** @class */ (function () {\r\n    /**\r\n     * Initialize Storage with AWS configurations\r\n     * @param {Object} options - Configuration object for storage\r\n     */\r\n    function StorageClass(options) {\r\n        this._options = options;\r\n        logger.debug('Storage Options', this._options);\r\n    }\r\n    /**\r\n     * Configure Storage part with aws configuration\r\n     * @param {Object} config - Configuration of the Storage\r\n     * @return {Object} - Current configuration\r\n     */\r\n    StorageClass.prototype.configure = function (options) {\r\n        logger.debug('configure Storage');\r\n        var opt = options ? options.Storage || options : {};\r\n        if (options['aws_user_files_s3_bucket']) {\r\n            opt = {\r\n                bucket: options['aws_user_files_s3_bucket'],\r\n                region: options['aws_user_files_s3_bucket_region']\r\n            };\r\n        }\r\n        this._options = Object.assign({}, this._options, opt);\r\n        if (!this._options.bucket) {\r\n            logger.debug('Do not have bucket yet');\r\n        }\r\n        return this._options;\r\n    };\r\n    /**\r\n    * Get a presigned URL of the file\r\n    * @param {String} key - key of the object\r\n    * @param {Object} [options] - { level : private|public }\r\n    * @return - A promise resolves to Amazon S3 presigned URL on success\r\n    */\r\n    StorageClass.prototype.get = function (key, options) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var credentialsOK, opt, bucket, region, credentials, level, download, track, expires, prefix, final_key, s3, params;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 1:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        opt = Object.assign({}, this._options, options);\r\n                        bucket = opt.bucket, region = opt.region, credentials = opt.credentials, level = opt.level, download = opt.download, track = opt.track, expires = opt.expires;\r\n                        prefix = this._prefix(opt);\r\n                        final_key = prefix + key;\r\n                        s3 = this._createS3(opt);\r\n                        logger.debug('get ' + key + ' from ' + final_key);\r\n                        params = {\r\n                            Bucket: bucket,\r\n                            Key: final_key\r\n                        };\r\n                        if (download === true) {\r\n                            return [2 /*return*/, new Promise(function (res, rej) {\r\n                                    s3.getObject(params, function (err, data) {\r\n                                        if (err) {\r\n                                            dispatchStorageEvent(track, { method: 'get', result: 'failed' }, null);\r\n                                            rej(err);\r\n                                        }\r\n                                        else {\r\n                                            dispatchStorageEvent(track, { method: 'get', result: 'success' }, { fileSize: Number(data.Body['length']) });\r\n                                            res(data);\r\n                                        }\r\n                                    });\r\n                                })];\r\n                        }\r\n                        if (expires) {\r\n                            params.Expires = expires;\r\n                        }\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                try {\r\n                                    var url = s3.getSignedUrl('getObject', params);\r\n                                    dispatchStorageEvent(track, { method: 'get', result: 'success' }, null);\r\n                                    res(url);\r\n                                }\r\n                                catch (e) {\r\n                                    logger.warn('get signed url error', e);\r\n                                    dispatchStorageEvent(track, { method: 'get', result: 'failed' }, null);\r\n                                    rej(e);\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Put a file in S3 bucket specified to configure method\r\n     * @param {Stirng} key - key of the object\r\n     * @param {Object} object - File to be put in Amazon S3 bucket\r\n     * @param {Object} [options] - { level : private|public, contentType: MIME Types }\r\n     * @return - promise resolves to object on success\r\n     */\r\n    StorageClass.prototype.put = function (key, object, options) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var credentialsOK, opt, bucket, region, credentials, level, track, contentType, contentDisposition, cacheControl, expires, metadata, type, prefix, final_key, s3, params;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 1:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        opt = Object.assign({}, this._options, options);\r\n                        bucket = opt.bucket, region = opt.region, credentials = opt.credentials, level = opt.level, track = opt.track;\r\n                        contentType = opt.contentType, contentDisposition = opt.contentDisposition, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata;\r\n                        type = contentType ? contentType : 'binary/octet-stream';\r\n                        prefix = this._prefix(opt);\r\n                        final_key = prefix + key;\r\n                        s3 = this._createS3(opt);\r\n                        logger.debug('put ' + key + ' to ' + final_key);\r\n                        params = {\r\n                            Bucket: bucket,\r\n                            Key: final_key,\r\n                            Body: object,\r\n                            ContentType: type\r\n                        };\r\n                        if (cacheControl) {\r\n                            params.CacheControl = cacheControl;\r\n                        }\r\n                        if (contentDisposition) {\r\n                            params.ContentDisposition = contentDisposition;\r\n                        }\r\n                        if (expires) {\r\n                            params.Expires = expires;\r\n                        }\r\n                        if (metadata) {\r\n                            params.Metadata = metadata;\r\n                        }\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                s3.upload(params, function (err, data) {\r\n                                    if (err) {\r\n                                        logger.warn(\"error uploading\", err);\r\n                                        dispatchStorageEvent(track, { method: 'put', result: 'failed' }, null);\r\n                                        rej(err);\r\n                                    }\r\n                                    else {\r\n                                        logger.debug('upload result', data);\r\n                                        dispatchStorageEvent(track, { method: 'put', result: 'success' }, null);\r\n                                        res({\r\n                                            key: data.Key.substr(prefix.length)\r\n                                        });\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Remove the object for specified key\r\n     * @param {String} key - key of the object\r\n     * @param {Object} [options] - { level : private|public }\r\n     * @return - Promise resolves upon successful removal of the object\r\n     */\r\n    StorageClass.prototype.remove = function (key, options) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var credentialsOK, opt, bucket, region, credentials, level, track, prefix, final_key, s3, params;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 1:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        opt = Object.assign({}, this._options, options);\r\n                        bucket = opt.bucket, region = opt.region, credentials = opt.credentials, level = opt.level, track = opt.track;\r\n                        prefix = this._prefix(opt);\r\n                        final_key = prefix + key;\r\n                        s3 = this._createS3(opt);\r\n                        logger.debug('remove ' + key + ' from ' + final_key);\r\n                        params = {\r\n                            Bucket: bucket,\r\n                            Key: final_key\r\n                        };\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                s3.deleteObject(params, function (err, data) {\r\n                                    if (err) {\r\n                                        dispatchStorageEvent(track, { method: 'remove', result: 'failed' }, null);\r\n                                        rej(err);\r\n                                    }\r\n                                    else {\r\n                                        dispatchStorageEvent(track, { method: 'remove', result: 'success' }, null);\r\n                                        res(data);\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List bucket objects relative to the level and prefix specified\r\n     * @param {String} path - the path that contains objects\r\n     * @param {Object} [options] - { level : private|public }\r\n     * @return - Promise resolves to list of keys for all objects in path\r\n     */\r\n    StorageClass.prototype.list = function (path, options) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var credentialsOK, opt, bucket, region, credentials, level, download, track, prefix, final_path, s3, params;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\r\n                    case 1:\r\n                        credentialsOK = _a.sent();\r\n                        if (!credentialsOK) {\r\n                            return [2 /*return*/, Promise.reject('No credentials')];\r\n                        }\r\n                        opt = Object.assign({}, this._options, options);\r\n                        bucket = opt.bucket, region = opt.region, credentials = opt.credentials, level = opt.level, download = opt.download, track = opt.track;\r\n                        prefix = this._prefix(opt);\r\n                        final_path = prefix + path;\r\n                        s3 = this._createS3(opt);\r\n                        logger.debug('list ' + path + ' from ' + final_path);\r\n                        params = {\r\n                            Bucket: bucket,\r\n                            Prefix: final_path\r\n                        };\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                s3.listObjects(params, function (err, data) {\r\n                                    if (err) {\r\n                                        logger.warn('list error', err);\r\n                                        dispatchStorageEvent(track, { method: 'list', result: 'failed' }, null);\r\n                                        rej(err);\r\n                                    }\r\n                                    else {\r\n                                        var list = data.Contents.map(function (item) {\r\n                                            return {\r\n                                                key: item.Key.substr(prefix.length),\r\n                                                eTag: item.ETag,\r\n                                                lastModified: item.LastModified,\r\n                                                size: item.Size\r\n                                            };\r\n                                        });\r\n                                        dispatchStorageEvent(track, { method: 'list', result: 'success' }, null);\r\n                                        logger.debug('list', list);\r\n                                        res(list);\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    StorageClass.prototype._ensureCredentials = function () {\r\n        // commented\r\n        // will cause bug if another user logged in without refreshing page\r\n        // if (this._options.credentials) { return Promise.resolve(true); }\r\n        var _this = this;\r\n        return Auth.currentCredentials()\r\n            .then(function (credentials) {\r\n            if (!credentials)\r\n                return false;\r\n            var cred = Auth.essentialCredentials(credentials);\r\n            logger.debug('set credentials for storage', cred);\r\n            _this._options.credentials = cred;\r\n            return true;\r\n        })\r\n            .catch(function (err) {\r\n            logger.warn('ensure credentials error', err);\r\n            return false;\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    StorageClass.prototype._prefix = function (options) {\r\n        var credentials = options.credentials, level = options.level;\r\n        switch (level) {\r\n            case 'private':\r\n                return \"private/\" + credentials.identityId + \"/\";\r\n            case 'protected':\r\n                return \"protected/\" + credentials.identityId + \"/\";\r\n            default:\r\n                return 'public/';\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    StorageClass.prototype._createS3 = function (options) {\r\n        var bucket = options.bucket, region = options.region, credentials = options.credentials;\r\n        AWS.config.update({\r\n            region: region,\r\n            credentials: credentials\r\n        });\r\n        return new S3({\r\n            apiVersion: '2006-03-01',\r\n            params: { Bucket: bucket },\r\n            region: region\r\n        });\r\n    };\r\n    return StorageClass;\r\n}());\r\nexport default StorageClass;\r\n//# sourceMappingURL=Storage.js.map","map":"{\"version\":3,\"file\":\"Storage.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/Storage/Storage.ts\"],\"names\":[],\"mappings\":\"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\"}"}
