{"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { AWS, Cognito, CognitoHostedUI, ConsoleLogger as Logger, Constants, Hub, FacebookOAuth, GoogleOAuth, JS, Parser } from '../Common';\r\nimport Platform from '../Common/Platform';\r\nimport Cache from '../Cache';\r\nvar logger = new Logger('AuthClass');\r\nvar CognitoIdentityCredentials = AWS.CognitoIdentityCredentials, Credentials = AWS.Credentials;\r\nvar CognitoAuth = CognitoHostedUI.CognitoAuth;\r\nvar CookieStorage = Cognito.CookieStorage, CognitoUserPool = Cognito.CognitoUserPool, CognitoUserAttribute = Cognito.CognitoUserAttribute, CognitoUser = Cognito.CognitoUser, AuthenticationDetails = Cognito.AuthenticationDetails;\r\nvar dispatchAuthEvent = function (event, data) {\r\n    Hub.dispatch('auth', { event: event, data: data }, 'Auth');\r\n};\r\n/**\r\n* Provide authentication steps\r\n*/\r\nvar AuthClass = /** @class */ (function () {\r\n    /**\r\n     * Initialize Auth with AWS configurations\r\n     * @param {Object} config - Configuration of the Auth\r\n     */\r\n    function AuthClass(config) {\r\n        this.userPool = null;\r\n        this._cognitoAuthClient = null;\r\n        this.credentials = null;\r\n        this.credentials_source = ''; // aws, guest, userPool, federated\r\n        this.user = null;\r\n        this._refreshHandlers = {};\r\n        this._gettingCredPromise = null;\r\n        this.configure(config);\r\n        // refresh token\r\n        this._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\r\n        this._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\r\n        if (AWS.config) {\r\n            AWS.config.update({ customUserAgent: Constants.userAgent });\r\n        }\r\n        else {\r\n            logger.warn('No AWS.config');\r\n        }\r\n    }\r\n    AuthClass.prototype.configure = function (config) {\r\n        var _this = this;\r\n        if (!config)\r\n            return this._config;\r\n        logger.debug('configure Auth');\r\n        var conf = Object.assign({}, this._config, Parser.parseMobilehubConfig(config).Auth, config);\r\n        this._config = conf;\r\n        if (!this._config.identityPoolId) {\r\n            logger.debug('Do not have identityPoolId yet.');\r\n        }\r\n        var _a = this._config, userPoolId = _a.userPoolId, userPoolWebClientId = _a.userPoolWebClientId, cookieStorage = _a.cookieStorage, oauth = _a.oauth;\r\n        if (userPoolId) {\r\n            var userPoolData = {\r\n                UserPoolId: userPoolId,\r\n                ClientId: userPoolWebClientId,\r\n            };\r\n            if (cookieStorage) {\r\n                userPoolData.Storage = new CookieStorage(cookieStorage);\r\n            }\r\n            this.userPool = new CognitoUserPool(userPoolData);\r\n            if (Platform.isReactNative) {\r\n                var that = this;\r\n                this._userPoolStorageSync = new Promise(function (resolve, reject) {\r\n                    _this.userPool.storage.sync(function (err, data) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(data);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        // initiailize cognitoauth client if hosted ui options provided\r\n        if (oauth) {\r\n            var that_1 = this;\r\n            var cognitoAuthParams = Object.assign({\r\n                ClientId: userPoolWebClientId,\r\n                UserPoolId: userPoolId,\r\n                AppWebDomain: oauth.domain,\r\n                TokenScopesArray: oauth.scope,\r\n                RedirectUriSignIn: oauth.redirectSignIn,\r\n                RedirectUriSignOut: oauth.redirectSignOut,\r\n                ResponseType: oauth.responseType\r\n            }, oauth.options);\r\n            logger.debug('cognito auth params', cognitoAuthParams);\r\n            this._cognitoAuthClient = new CognitoAuth(cognitoAuthParams);\r\n            this._cognitoAuthClient.userhandler = {\r\n                // user signed in\r\n                onSuccess: function (result) {\r\n                    that_1.user = that_1.userPool.getCurrentUser();\r\n                    logger.debug(\"Cognito Hosted authentication result\", result);\r\n                    that_1.currentSession().then(function (session) {\r\n                        that_1._setCredentialsFromSession(session).then(function (cred) {\r\n                            logger.debug('sign in succefully with', cred);\r\n                            dispatchAuthEvent('signIn', that_1.user);\r\n                        });\r\n                    });\r\n                },\r\n                onFailure: function (err) {\r\n                    logger.debug(\"Error in cognito hosted auth response\", err);\r\n                }\r\n            };\r\n            // if not logged in, try to parse the url.\r\n            this.currentAuthenticatedUser().then(function () {\r\n                logger.debug('user already logged in');\r\n            }).catch(function (e) {\r\n                logger.debug('not logged in, try to parse the url');\r\n                var curUrl = window.location.href;\r\n                _this._cognitoAuthClient.parseCognitoWebResponse(curUrl);\r\n            });\r\n        }\r\n        dispatchAuthEvent('configured', null);\r\n        return this._config;\r\n    };\r\n    /**\r\n     * Sign up with username, password and other attrbutes like phone, email\r\n     * @param {String | object} params - The user attirbutes used for signin\r\n     * @param {String[]} restOfAttrs - for the backward compatability\r\n     * @return - A promise resolves callback data if success\r\n     */\r\n    AuthClass.prototype.signUp = function (params) {\r\n        var _this = this;\r\n        var restOfAttrs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            restOfAttrs[_i - 1] = arguments[_i];\r\n        }\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        var username = null;\r\n        var password = null;\r\n        var attributes = [];\r\n        var validationData = null;\r\n        if (params && typeof params === 'string') {\r\n            username = params;\r\n            password = restOfAttrs ? restOfAttrs[0] : null;\r\n            var email = restOfAttrs ? restOfAttrs[1] : null;\r\n            var phone_number = restOfAttrs ? restOfAttrs[2] : null;\r\n            if (email)\r\n                attributes.push({ Name: 'email', Value: email });\r\n            if (phone_number)\r\n                attributes.push({ Name: 'phone_number', Value: phone_number });\r\n        }\r\n        else if (params && typeof params === 'object') {\r\n            username = params['username'];\r\n            password = params['password'];\r\n            var attrs_1 = params['attributes'];\r\n            if (attrs_1) {\r\n                Object.keys(attrs_1).map(function (key) {\r\n                    var ele = { Name: key, Value: attrs_1[key] };\r\n                    attributes.push(ele);\r\n                });\r\n            }\r\n            validationData = params['validationData'] || null;\r\n        }\r\n        else {\r\n            return Promise.reject('The first parameter should either be non-null string or object');\r\n        }\r\n        if (!username) {\r\n            return Promise.reject('Username cannot be empty');\r\n        }\r\n        if (!password) {\r\n            return Promise.reject('Password cannot be empty');\r\n        }\r\n        logger.debug('signUp attrs:', attributes);\r\n        logger.debug('signUp validation data:', validationData);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\r\n                if (err) {\r\n                    dispatchAuthEvent('signUp_failure', err);\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    dispatchAuthEvent('signUp', data);\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Send the verfication code to confirm sign up\r\n     * @param {String} username - The username to be confirmed\r\n     * @param {String} code - The verification code\r\n     * @return - A promise resolves callback data if success\r\n     */\r\n    AuthClass.prototype.confirmSignUp = function (username, code) {\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        if (!username) {\r\n            return Promise.reject('Username cannot be empty');\r\n        }\r\n        if (!code) {\r\n            return Promise.reject('Code cannot be empty');\r\n        }\r\n        var user = this.createCognitoUser(username);\r\n        return new Promise(function (resolve, reject) {\r\n            user.confirmRegistration(code, true, function (err, data) {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Resend the verification code\r\n     * @param {String} username - The username to be confirmed\r\n     * @return - A promise resolves data if success\r\n     */\r\n    AuthClass.prototype.resendSignUp = function (username) {\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        if (!username) {\r\n            return Promise.reject('Username cannot be empty');\r\n        }\r\n        var user = this.createCognitoUser(username);\r\n        return new Promise(function (resolve, reject) {\r\n            user.resendConfirmationCode(function (err, data) {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Sign in\r\n     * @param {String} username - The username to be signed in\r\n     * @param {String} password - The password of the username\r\n     * @return - A promise resolves the CognitoUser\r\n     */\r\n    AuthClass.prototype.signIn = function (username, password) {\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        if (!username) {\r\n            return Promise.reject('Username cannot be empty');\r\n        }\r\n        if (!password) {\r\n            return Promise.reject('Password cannot be empty');\r\n        }\r\n        var user = this.createCognitoUser(username);\r\n        var authDetails = new AuthenticationDetails({\r\n            Username: username,\r\n            Password: password\r\n        });\r\n        var that = this;\r\n        return new Promise(function (resolve, reject) {\r\n            user.authenticateUser(authDetails, {\r\n                onSuccess: function (session) {\r\n                    logger.debug(session);\r\n                    that._setCredentialsFromSession(session).then(function (cred) {\r\n                        that.user = user;\r\n                        dispatchAuthEvent('signIn', user);\r\n                        resolve(user);\r\n                    }).catch(function (e) {\r\n                        logger.debug('cannot get cognito credentials');\r\n                        reject('signin failed');\r\n                    });\r\n                },\r\n                onFailure: function (err) {\r\n                    logger.debug('signIn failure', err);\r\n                    dispatchAuthEvent('signIn_failure', err);\r\n                    reject(err);\r\n                },\r\n                mfaRequired: function (challengeName, challengeParam) {\r\n                    logger.debug('signIn MFA required');\r\n                    user['challengeName'] = challengeName;\r\n                    user['challengeParam'] = challengeParam;\r\n                    resolve(user);\r\n                },\r\n                newPasswordRequired: function (userAttributes, requiredAttributes) {\r\n                    logger.debug('signIn new password');\r\n                    user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\r\n                    user['challengeParam'] = {\r\n                        userAttributes: userAttributes,\r\n                        requiredAttributes: requiredAttributes\r\n                    };\r\n                    resolve(user);\r\n                },\r\n                mfaSetup: function (challengeName, challengeParam) {\r\n                    logger.debug('signIn mfa setup', challengeName);\r\n                    user['challengeName'] = challengeName;\r\n                    user['challengeParam'] = challengeParam;\r\n                    resolve(user);\r\n                },\r\n                totpRequired: function (challengeName, challengeParam) {\r\n                    logger.debug('signIn totpRequired');\r\n                    user['challengeName'] = challengeName;\r\n                    user['challengeParam'] = challengeParam;\r\n                    resolve(user);\r\n                },\r\n                selectMFAType: function (challengeName, challengeParam) {\r\n                    logger.debug('signIn selectMFAType', challengeName);\r\n                    user['challengeName'] = challengeName;\r\n                    user['challengeParam'] = challengeParam;\r\n                    resolve(user);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * get user current preferred mfa option\r\n     * @param {CognitoUser} user - the current user\r\n     * @return - A promise resolves the current preferred mfa option if success\r\n     */\r\n    AuthClass.prototype.getMFAOptions = function (user) {\r\n        return new Promise(function (res, rej) {\r\n            user.getMFAOptions(function (err, mfaOptions) {\r\n                if (err) {\r\n                    logger.debug('get MFA Options failed', err);\r\n                    rej(err);\r\n                }\r\n                logger.debug('get MFA options success', mfaOptions);\r\n                res(mfaOptions);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * set preferred MFA method\r\n     * @param {CognitoUser} user - the current Cognito user\r\n     * @param {string} mfaMethod - preferred mfa method\r\n     * @return - A promise resolve if success\r\n     */\r\n    AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\r\n        var smsMfaSettings = {\r\n            PreferredMfa: false,\r\n            Enabled: false\r\n        };\r\n        var totpMfaSettings = {\r\n            PreferredMfa: false,\r\n            Enabled: false\r\n        };\r\n        switch (mfaMethod) {\r\n            case 'TOTP':\r\n                totpMfaSettings = {\r\n                    PreferredMfa: true,\r\n                    Enabled: true\r\n                };\r\n                break;\r\n            case 'SMS':\r\n                smsMfaSettings = {\r\n                    PreferredMfa: true,\r\n                    Enabled: true\r\n                };\r\n                break;\r\n            case 'NOMFA':\r\n                break;\r\n            default:\r\n                logger.debug('no validmfa method provided');\r\n                return Promise.reject('no validmfa method provided');\r\n        }\r\n        var that = this;\r\n        var TOTP_NOT_VERIFED = 'User has not verified software token mfa';\r\n        var TOTP_NOT_SETUP = 'User has not set up software token mfa';\r\n        return new Promise(function (res, rej) {\r\n            user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\r\n                if (err) {\r\n                    // if totp not setup or verified and user want to set it, return error\r\n                    // otherwise igonre it\r\n                    if (err.message === TOTP_NOT_SETUP || err.message === TOTP_NOT_VERIFED) {\r\n                        if (mfaMethod === 'SMS') {\r\n                            that.enableSMS(user).then(function (data) {\r\n                                logger.debug('Set user mfa success', data);\r\n                                res(data);\r\n                            }).catch(function (err) {\r\n                                logger.debug('Set user mfa preference error', err);\r\n                                rej(err);\r\n                            });\r\n                        }\r\n                        else if (mfaMethod === 'NOMFA') {\r\n                            // diable sms\r\n                            that.disableSMS(user).then(function (data) {\r\n                                logger.debug('Set user mfa success', data);\r\n                                res(data);\r\n                            }).catch(function (err) {\r\n                                logger.debug('Set user mfa preference error', err);\r\n                                rej(err);\r\n                            });\r\n                        }\r\n                        else {\r\n                            logger.debug('Set user mfa preference error', err);\r\n                            rej(err);\r\n                        }\r\n                    }\r\n                    else {\r\n                        logger.debug('Set user mfa preference error', err);\r\n                        rej(err);\r\n                    }\r\n                }\r\n                logger.debug('Set user mfa success', result);\r\n                res(result);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * diable SMS\r\n     * @param {CognitoUser} user - the current user\r\n     * @return - A promise resolves is success\r\n     */\r\n    AuthClass.prototype.disableSMS = function (user) {\r\n        return new Promise(function (res, rej) {\r\n            user.disableMFA(function (err, data) {\r\n                if (err) {\r\n                    logger.debug('disable mfa failed', err);\r\n                    rej(err);\r\n                }\r\n                logger.debug('disable mfa succeed', data);\r\n                res(data);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * enable SMS\r\n     * @param {CognitoUser} user - the current user\r\n     * @return - A promise resolves is success\r\n     */\r\n    AuthClass.prototype.enableSMS = function (user) {\r\n        return new Promise(function (res, rej) {\r\n            user.enableMFA(function (err, data) {\r\n                if (err) {\r\n                    logger.debug('enable mfa failed', err);\r\n                    rej(err);\r\n                }\r\n                logger.debug('enable mfa succeed', data);\r\n                res(data);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Setup TOTP\r\n     * @param {CognitoUser} user - the current user\r\n     * @return - A promise resolves with the secret code if success\r\n     */\r\n    AuthClass.prototype.setupTOTP = function (user) {\r\n        return new Promise(function (res, rej) {\r\n            user.associateSoftwareToken({\r\n                onFailure: function (err) {\r\n                    logger.debug('associateSoftwareToken failed', err);\r\n                    rej(err);\r\n                },\r\n                associateSecretCode: function (secretCode) {\r\n                    logger.debug('associateSoftwareToken sucess', secretCode);\r\n                    res(secretCode);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * verify TOTP setup\r\n     * @param {CognitoUser} user - the current user\r\n     * @param {string} challengeAnswer - challenge answer\r\n     * @return - A promise resolves is success\r\n     */\r\n    AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\r\n        logger.debug('verfication totp token', user, challengeAnswer);\r\n        return new Promise(function (res, rej) {\r\n            user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\r\n                onFailure: function (err) {\r\n                    logger.debug('verifyTotpToken failed', err);\r\n                    rej(err);\r\n                },\r\n                onSuccess: function (data) {\r\n                    logger.debug('verifyTotpToken success', data);\r\n                    res(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Send MFA code to confirm sign in\r\n     * @param {Object} user - The CognitoUser object\r\n     * @param {String} code - The confirmation code\r\n     */\r\n    AuthClass.prototype.confirmSignIn = function (user, code, mfaType) {\r\n        if (!code) {\r\n            return Promise.reject('Code cannot be empty');\r\n        }\r\n        var that = this;\r\n        return new Promise(function (resolve, reject) {\r\n            user.sendMFACode(code, {\r\n                onSuccess: function (session) {\r\n                    logger.debug(session);\r\n                    that._setCredentialsFromSession(session).then(function (cred) {\r\n                        that.user = user;\r\n                        dispatchAuthEvent('signIn', user);\r\n                        resolve(user);\r\n                    }).catch(function (e) {\r\n                        logger.debug('cannot get cognito credentials');\r\n                        reject('signin failed');\r\n                    });\r\n                },\r\n                onFailure: function (err) {\r\n                    logger.debug('confirm signIn failure', err);\r\n                    reject(err);\r\n                }\r\n            }, mfaType);\r\n        });\r\n    };\r\n    AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes) {\r\n        if (!password) {\r\n            return Promise.reject('Password cannot be empty');\r\n        }\r\n        var that = this;\r\n        return new Promise(function (resolve, reject) {\r\n            user.completeNewPasswordChallenge(password, requiredAttributes, {\r\n                onSuccess: function (session) {\r\n                    logger.debug(session);\r\n                    that._setCredentialsFromSession(session).then(function (cred) {\r\n                        that.user = user;\r\n                        dispatchAuthEvent('signIn', user);\r\n                        resolve(user);\r\n                    }).catch(function (e) {\r\n                        logger.debug('cannot get cognito credentials');\r\n                        reject('signin failed');\r\n                    });\r\n                },\r\n                onFailure: function (err) {\r\n                    logger.debug('completeNewPassword failure', err);\r\n                    reject(err);\r\n                },\r\n                mfaRequired: function (challengeName, challengeParam) {\r\n                    logger.debug('signIn MFA required');\r\n                    user['challengeName'] = challengeName;\r\n                    user['challengeParam'] = challengeParam;\r\n                    resolve(user);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update an authenticated users' attributes\r\n     * @param {CognitoUser} - The currently logged in user object\r\n     * @return {Promise}\r\n     **/\r\n    AuthClass.prototype.updateUserAttributes = function (user, attributes) {\r\n        var attr = {};\r\n        var attributeList = [];\r\n        return this.userSession(user)\r\n            .then(function (session) {\r\n            return new Promise(function (resolve, reject) {\r\n                for (var key in attributes) {\r\n                    if (key !== 'sub' &&\r\n                        key.indexOf('_verified') < 0 &&\r\n                        attributes[key]) {\r\n                        attr = {\r\n                            'Name': key,\r\n                            'Value': attributes[key]\r\n                        };\r\n                        attributeList.push(attr);\r\n                    }\r\n                }\r\n                user.updateAttributes(attributeList, function (err, result) {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve(result);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Return user attributes\r\n     * @param {Object} user - The CognitoUser object\r\n     * @return - A promise resolves to user attributes if success\r\n     */\r\n    AuthClass.prototype.userAttributes = function (user) {\r\n        return this.userSession(user)\r\n            .then(function (session) {\r\n            return new Promise(function (resolve, reject) {\r\n                user.getUserAttributes(function (err, attributes) {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve(attributes);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n    AuthClass.prototype.verifiedContact = function (user) {\r\n        var that = this;\r\n        return this.userAttributes(user)\r\n            .then(function (attributes) {\r\n            var attrs = that.attributesToObject(attributes);\r\n            var unverified = {};\r\n            var verified = {};\r\n            if (attrs['email']) {\r\n                if (attrs['email_verified']) {\r\n                    verified['email'] = attrs['email'];\r\n                }\r\n                else {\r\n                    unverified['email'] = attrs['email'];\r\n                }\r\n            }\r\n            if (attrs['phone_number']) {\r\n                if (attrs['phone_number_verified']) {\r\n                    verified['phone_number'] = attrs['phone_number'];\r\n                }\r\n                else {\r\n                    unverified['phone_number'] = attrs['phone_number'];\r\n                }\r\n            }\r\n            return {\r\n                verified: verified,\r\n                unverified: unverified\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Get current authenticated user\r\n     * @return - A promise resolves to curret authenticated CognitoUser if success\r\n     */\r\n    AuthClass.prototype.currentUserPoolUser = function () {\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        var user = null;\r\n        if (Platform.isReactNative) {\r\n            var that = this;\r\n            return this.getSyncedUser().then(function (user) {\r\n                if (!user) {\r\n                    return Promise.reject('No current user in userPool');\r\n                }\r\n                return new Promise(function (resolve, reject) {\r\n                    user.getSession(function (err, session) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(user);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            user = this.userPool.getCurrentUser();\r\n            if (!user) {\r\n                return Promise.reject('No current user in userPool');\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                user.getSession(function (err, session) {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve(user);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Return the current user after synchornizing AsyncStorage\r\n     * @return - A promise with the current authenticated user\r\n     **/\r\n    AuthClass.prototype.getSyncedUser = function () {\r\n        var that = this;\r\n        return (this._userPoolStorageSync || Promise.resolve()).then(function (result) {\r\n            if (!that.userPool) {\r\n                return Promise.reject('No userPool');\r\n            }\r\n            that.credentials_source = 'userPool';\r\n            return that.userPool.getCurrentUser();\r\n        });\r\n    };\r\n    /**\r\n     * Get current authenticated user\r\n     * @return - A promise resolves to curret authenticated CognitoUser if success\r\n     */\r\n    AuthClass.prototype.currentAuthenticatedUser = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var federatedUser, e_1, _a, e_2;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        logger.debug('getting current authenticted user');\r\n                        federatedUser = null;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Cache.getItem('federatedUser')];\r\n                    case 2:\r\n                        federatedUser = _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _b.sent();\r\n                        logger.debug('cannot load federated user from cache');\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        if (!federatedUser) return [3 /*break*/, 5];\r\n                        this.user = federatedUser;\r\n                        logger.debug('get current authenticated federated user', this.user);\r\n                        return [2 /*return*/, this.user];\r\n                    case 5:\r\n                        logger.debug('get current authenticated userpool user');\r\n                        _b.label = 6;\r\n                    case 6:\r\n                        _b.trys.push([6, 8, , 9]);\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.currentUserPoolUser()];\r\n                    case 7:\r\n                        _a.user = _b.sent();\r\n                        return [2 /*return*/, this.user];\r\n                    case 8:\r\n                        e_2 = _b.sent();\r\n                        return [2 /*return*/, Promise.reject('not authenticated')];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get current user's session\r\n     * @return - A promise resolves to session object if success\r\n     */\r\n    AuthClass.prototype.currentSession = function () {\r\n        var user;\r\n        var that = this;\r\n        logger.debug('Getting current session');\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        if (Platform.isReactNative) {\r\n            return this.getSyncedUser().then(function (user) {\r\n                if (!user) {\r\n                    logger.debug('Failed to get user from user pool');\r\n                    return Promise.reject('No current user');\r\n                }\r\n                return that.userSession(user);\r\n            });\r\n        }\r\n        else {\r\n            user = this.userPool.getCurrentUser();\r\n            if (!user) {\r\n                logger.debug('Failed to get user from user pool');\r\n                return Promise.reject('No current user');\r\n            }\r\n            return this.userSession(user);\r\n        }\r\n    };\r\n    /**\r\n     * Get the corresponding user session\r\n     * @param {Object} user - The CognitoUser object\r\n     * @return - A promise resolves to the session\r\n     */\r\n    AuthClass.prototype.userSession = function (user) {\r\n        return new Promise(function (resolve, reject) {\r\n            logger.debug('Getting the session from this user:', user);\r\n            user.getSession(function (err, session) {\r\n                if (err) {\r\n                    logger.debug('Failed to get the session from user', user);\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    logger.debug('Succeed to get the user session', session);\r\n                    // check if session is expired\r\n                    if (!session.isValid()) {\r\n                        var refreshToken = session.getRefreshToken();\r\n                        logger.debug('Session is not valid, refreshing session with refreshToken', refreshToken);\r\n                        user.refreshSession(refreshToken, function (err, newSession) {\r\n                            if (err) {\r\n                                logger.debug('Refresh Cognito Session failed', err);\r\n                                reject(err);\r\n                            }\r\n                            logger.debug('Refresh Cognito Session success', newSession);\r\n                            resolve(newSession);\r\n                        });\r\n                    }\r\n                    else {\r\n                        logger.debug('Session is valid, directly return this session');\r\n                        resolve(session);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get authenticated credentials of current user.\r\n     * @return - A promise resolves to be current user's credentials\r\n     */\r\n    AuthClass.prototype.currentUserCredentials = function () {\r\n        var _this = this;\r\n        var that = this;\r\n        logger.debug('Getting current user credentials');\r\n        if (Platform.isReactNative) {\r\n            // asyncstorage\r\n            return Cache.getItem('federatedInfo')\r\n                .then(function (federatedInfo) {\r\n                if (federatedInfo) {\r\n                    // refresh the jwt token here if necessary\r\n                    return that._refreshFederatedToken(federatedInfo);\r\n                }\r\n                else {\r\n                    return that.currentSession()\r\n                        .then(function (session) {\r\n                        return that._setCredentialsFromSession(session);\r\n                    }).catch(function (error) {\r\n                        return that._setCredentialsForGuest();\r\n                    });\r\n                }\r\n            }).catch(function (error) {\r\n                return Promise.reject(error);\r\n            });\r\n        }\r\n        else {\r\n            // first to check whether there is federation info in the local storage\r\n            var federatedInfo = Cache.getItem('federatedInfo');\r\n            if (federatedInfo) {\r\n                // refresh the jwt token here if necessary\r\n                return this._refreshFederatedToken(federatedInfo);\r\n            }\r\n            else {\r\n                return this.currentSession()\r\n                    .then(function (session) {\r\n                    logger.debug('getting session success', session);\r\n                    return _this._setCredentialsFromSession(session);\r\n                }).catch(function (error) {\r\n                    logger.debug('getting session failed', error);\r\n                    return _this._setCredentialsForGuest();\r\n                });\r\n            }\r\n        }\r\n    };\r\n    AuthClass.prototype._refreshFederatedToken = function (federatedInfo) {\r\n        var _this = this;\r\n        logger.debug('Getting federated credentials');\r\n        var provider = federatedInfo.provider, user = federatedInfo.user;\r\n        var token = federatedInfo.token;\r\n        var expires_at = federatedInfo.expires_at;\r\n        var that = this;\r\n        logger.debug('checking if federated jwt token expired');\r\n        if (expires_at < new Date().getTime()\r\n            && typeof that._refreshHandlers[provider] === 'function') {\r\n            logger.debug('getting refreshed jwt token from federation provider');\r\n            return that._refreshHandlers[provider]().then(function (data) {\r\n                logger.debug('refresh federated token sucessfully', data);\r\n                token = data.token;\r\n                expires_at = data.expires_at;\r\n                // Cache.setItem('federatedInfo', { provider, token, user, expires_at }, { priority: 1 });\r\n                return that._setCredentialsFromFederation({ provider: provider, token: token, user: user, expires_at: expires_at });\r\n            }).catch(function (e) {\r\n                logger.debug('refresh federated token failed', e);\r\n                _this.cleanCachedItems();\r\n                return Promise.reject('refreshing federation token failed: ' + e);\r\n            });\r\n        }\r\n        else {\r\n            if (!that._refreshHandlers[provider]) {\r\n                logger.debug('no refresh handler for provider:', provider);\r\n                this.cleanCachedItems();\r\n                return Promise.reject('no refresh handler for provider');\r\n            }\r\n            else {\r\n                logger.debug('token not expired');\r\n                return this._setCredentialsFromFederation({ provider: provider, token: token, user: user, expires_at: expires_at });\r\n            }\r\n        }\r\n    };\r\n    AuthClass.prototype.currentCredentials = function () {\r\n        logger.debug('getting current credntials');\r\n        return this.pickupCredentials();\r\n    };\r\n    /**\r\n     * Initiate an attribute confirmation request\r\n     * @param {Object} user - The CognitoUser\r\n     * @param {Object} attr - The attributes to be verified\r\n     * @return - A promise resolves to callback data if success\r\n     */\r\n    AuthClass.prototype.verifyUserAttribute = function (user, attr) {\r\n        return new Promise(function (resolve, reject) {\r\n            user.getAttributeVerificationCode(attr, {\r\n                onSuccess: function (data) { resolve(data); },\r\n                onFailure: function (err) { reject(err); }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Confirm an attribute using a confirmation code\r\n     * @param {Object} user - The CognitoUser\r\n     * @param {Object} attr - The attribute to be verified\r\n     * @param {String} code - The confirmation code\r\n     * @return - A promise resolves to callback data if success\r\n     */\r\n    AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\r\n        if (!code) {\r\n            return Promise.reject('Code cannot be empty');\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            user.verifyAttribute(attr, code, {\r\n                onSuccess: function (data) { resolve(data); },\r\n                onFailure: function (err) { reject(err); }\r\n            });\r\n        });\r\n    };\r\n    AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\r\n        var that = this;\r\n        return that.currentUserPoolUser()\r\n            .then(function (user) { return that.verifyUserAttribute(user, attr); });\r\n    };\r\n    /**\r\n     * Confirm current user's attribute using a confirmation code\r\n     * @param {Object} attr - The attribute to be verified\r\n     * @param {String} code - The confirmation code\r\n     * @return - A promise resolves to callback data if success\r\n     */\r\n    AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\r\n        var that = this;\r\n        return that.currentUserPoolUser()\r\n            .then(function (user) { return that.verifyUserAttributeSubmit(user, attr, code); });\r\n    };\r\n    /**\r\n     * Sign out method\r\n     * @return - A promise resolved if success\r\n     */\r\n    AuthClass.prototype.signOut = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var e_3, source, user, that;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.cleanCachedItems()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_3 = _a.sent();\r\n                        logger.debug('failed to clear cached items');\r\n                        return [3 /*break*/, 3];\r\n                    case 3:\r\n                        source = this.credentials_source;\r\n                        if (source === 'aws' || source === 'userPool') {\r\n                            if (!this.userPool) {\r\n                                return [2 /*return*/, Promise.reject('No userPool')];\r\n                            }\r\n                            user = this.userPool.getCurrentUser();\r\n                            if (!user) {\r\n                                return [2 /*return*/, Promise.resolve()];\r\n                            }\r\n                            logger.debug('user sign out', user);\r\n                            user.signOut();\r\n                            if (this._cognitoAuthClient) {\r\n                                this._cognitoAuthClient.signOut();\r\n                            }\r\n                        }\r\n                        that = this;\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                that._setCredentialsForGuest().then(function (cred) {\r\n                                    dispatchAuthEvent('signOut', that.user);\r\n                                    that.user = null;\r\n                                    resolve();\r\n                                }).catch(function (e) {\r\n                                    logger.debug('cannot load guest credentials for unauthenticated user');\r\n                                    dispatchAuthEvent('signOut', that.user);\r\n                                    that.user = null;\r\n                                    resolve();\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthClass.prototype.cleanCachedItems = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, identityPoolId, region, mandatorySignIn, credentials;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region, mandatorySignIn = _a.mandatorySignIn;\r\n                        if (identityPoolId) {\r\n                            credentials = new CognitoIdentityCredentials({\r\n                                IdentityPoolId: identityPoolId\r\n                            }, {\r\n                                region: region\r\n                            });\r\n                            credentials.clearCachedId();\r\n                        }\r\n                        // clear federatedInfo\r\n                        return [4 /*yield*/, Cache.removeItem('federatedInfo')];\r\n                    case 1:\r\n                        // clear federatedInfo\r\n                        _b.sent();\r\n                        return [4 /*yield*/, Cache.removeItem('federatedUser')];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Change a password for an authenticated user\r\n     * @param {Object} user - The CognitoUser object\r\n     * @param {String} oldPassword - the current password\r\n     * @param {String} newPassword - the requested new password\r\n     * @return - A promise resolves if success\r\n     */\r\n    AuthClass.prototype.changePassword = function (user, oldPassword, newPassword) {\r\n        return this.userSession(user)\r\n            .then(function (session) {\r\n            return new Promise(function (resolve, reject) {\r\n                user.changePassword(oldPassword, newPassword, function (err, data) {\r\n                    if (err) {\r\n                        logger.debug('change password failure', err);\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve(data);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initiate a forgot password request\r\n     * @param {String} username - the username to change password\r\n     * @return - A promise resolves if success\r\n     */\r\n    AuthClass.prototype.forgotPassword = function (username) {\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        if (!username) {\r\n            return Promise.reject('Username cannot be empty');\r\n        }\r\n        var user = this.createCognitoUser(username);\r\n        return new Promise(function (resolve, reject) {\r\n            user.forgotPassword({\r\n                onSuccess: function () { resolve(); },\r\n                onFailure: function (err) {\r\n                    logger.debug('forgot password failure', err);\r\n                    reject(err);\r\n                },\r\n                inputVerificationCode: function (data) {\r\n                    resolve(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Confirm a new password using a confirmation Code\r\n     * @param {String} username - The username\r\n     * @param {String} code - The confirmation code\r\n     * @param {String} password - The new password\r\n     * @return - A promise that resolves if success\r\n     */\r\n    AuthClass.prototype.forgotPasswordSubmit = function (username, code, password) {\r\n        if (!this.userPool) {\r\n            return Promise.reject('No userPool');\r\n        }\r\n        if (!username) {\r\n            return Promise.reject('Username cannot be empty');\r\n        }\r\n        if (!code) {\r\n            return Promise.reject('Code cannot be empty');\r\n        }\r\n        if (!password) {\r\n            return Promise.reject('Password cannot be empty');\r\n        }\r\n        var user = this.createCognitoUser(username);\r\n        return new Promise(function (resolve, reject) {\r\n            user.confirmPassword(code, password, {\r\n                onSuccess: function () { resolve(); },\r\n                onFailure: function (err) { reject(err); }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get user information\r\n     * @async\r\n     * @return {Object }- current User's information\r\n     */\r\n    AuthClass.prototype.currentUserInfo = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var source, user, attributes, userAttrs, e_4, info, err_1, user;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        source = this.credentials_source;\r\n                        if (!(!source || source === 'aws' || source === 'userPool')) return [3 /*break*/, 9];\r\n                        return [4 /*yield*/, this.currentUserPoolUser()\r\n                                .catch(function (err) { return logger.debug(err); })];\r\n                    case 1:\r\n                        user = _a.sent();\r\n                        if (!user) {\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 8, , 9]);\r\n                        return [4 /*yield*/, this.userAttributes(user)];\r\n                    case 3:\r\n                        attributes = _a.sent();\r\n                        userAttrs = this.attributesToObject(attributes);\r\n                        if (!!this.credentials) return [3 /*break*/, 7];\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, this.currentCredentials()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_4 = _a.sent();\r\n                        logger.debug('Failed to retrieve credentials while getting current user info', e_4);\r\n                        return [3 /*break*/, 7];\r\n                    case 7:\r\n                        info = {\r\n                            'id': this.credentials ? this.credentials.identityId : undefined,\r\n                            'username': user.username,\r\n                            'attributes': userAttrs\r\n                        };\r\n                        return [2 /*return*/, info];\r\n                    case 8:\r\n                        err_1 = _a.sent();\r\n                        logger.debug('currentUserInfo error', err_1);\r\n                        return [2 /*return*/, {}];\r\n                    case 9:\r\n                        if (source === 'federated') {\r\n                            user = this.user;\r\n                            return [2 /*return*/, user ? user : {}];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * For federated login\r\n     * @param {String} provider - federation login provider\r\n     * @param {FederatedResponse} response - response should have the access token\r\n     * and the expiration time (the universal time)\r\n     * @param {String} user - user info\r\n     */\r\n    AuthClass.prototype.federatedSignIn = function (provider, response, user) {\r\n        var _this = this;\r\n        var token = response.token, expires_at = response.expires_at;\r\n        var that = this;\r\n        return new Promise(function (res, rej) {\r\n            that._setCredentialsFromFederation({ provider: provider, token: token, user: user, expires_at: expires_at }).then(function (cred) {\r\n                dispatchAuthEvent('signIn', that.user);\r\n                logger.debug('federated sign in credentials', _this.credentials);\r\n                res(cred);\r\n            }).catch(function (e) {\r\n                rej(e);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Compact version of credentials\r\n     * @param {Object} credentials\r\n     * @return {Object} - Credentials\r\n     */\r\n    AuthClass.prototype.essentialCredentials = function (credentials) {\r\n        return {\r\n            accessKeyId: credentials.accessKeyId,\r\n            sessionToken: credentials.sessionToken,\r\n            secretAccessKey: credentials.secretAccessKey,\r\n            identityId: credentials.identityId,\r\n            authenticated: credentials.authenticated\r\n        };\r\n    };\r\n    AuthClass.prototype.attributesToObject = function (attributes) {\r\n        var obj = {};\r\n        if (attributes) {\r\n            attributes.map(function (attribute) {\r\n                if (attribute.Name === 'sub')\r\n                    return;\r\n                if (attribute.Value === 'true') {\r\n                    obj[attribute.Name] = true;\r\n                }\r\n                else if (attribute.Value === 'false') {\r\n                    obj[attribute.Name] = false;\r\n                }\r\n                else {\r\n                    obj[attribute.Name] = attribute.Value;\r\n                }\r\n            });\r\n        }\r\n        return obj;\r\n    };\r\n    AuthClass.prototype.pickupCredentials = function () {\r\n        logger.debug('picking up credentials');\r\n        if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\r\n            logger.debug('getting new cred promise');\r\n            if (AWS.config && AWS.config.credentials && AWS.config.credentials instanceof Credentials) {\r\n                this._gettingCredPromise = JS.makeQuerablePromise(this._setCredentialsFromAWS());\r\n            }\r\n            else {\r\n                this._gettingCredPromise = JS.makeQuerablePromise(this.keepAlive());\r\n            }\r\n        }\r\n        else {\r\n            logger.debug('getting old cred promise');\r\n        }\r\n        return this._gettingCredPromise;\r\n    };\r\n    AuthClass.prototype._setCredentialsFromAWS = function () {\r\n        var credentials = AWS.config.credentials;\r\n        logger.debug('setting credentials from aws');\r\n        var that = this;\r\n        if (credentials instanceof Credentials) {\r\n            return this._loadCredentials(credentials, 'aws', undefined, null);\r\n        }\r\n        else {\r\n            logger.debug('AWS.config.credentials is not an instance of AWS Credentials');\r\n            return Promise.reject('AWS.config.credentials is not an instance of AWS Credentials');\r\n        }\r\n    };\r\n    AuthClass.prototype._setCredentialsForGuest = function () {\r\n        logger.debug('setting credentials for guest');\r\n        var _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region, mandatorySignIn = _a.mandatorySignIn;\r\n        if (mandatorySignIn) {\r\n            return Promise.reject('cannot get guest credentials when mandatory signin enabled');\r\n        }\r\n        var credentials = new CognitoIdentityCredentials({\r\n            IdentityPoolId: identityPoolId\r\n        }, {\r\n            region: region\r\n        });\r\n        var that = this;\r\n        return this._loadCredentials(credentials, 'guest', false, null);\r\n    };\r\n    AuthClass.prototype._setCredentialsFromSession = function (session) {\r\n        logger.debug('set credentials from session');\r\n        var idToken = session.getIdToken().getJwtToken();\r\n        var _a = this._config, region = _a.region, userPoolId = _a.userPoolId, identityPoolId = _a.identityPoolId;\r\n        var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\r\n        var logins = {};\r\n        logins[key] = idToken;\r\n        var credentials = new CognitoIdentityCredentials({\r\n            IdentityPoolId: identityPoolId,\r\n            Logins: logins\r\n        }, {\r\n            region: region\r\n        });\r\n        var that = this;\r\n        return this._loadCredentials(credentials, 'userPool', true, null);\r\n    };\r\n    AuthClass.prototype._setCredentialsFromFederation = function (params) {\r\n        var provider = params.provider, token = params.token, user = params.user, expires_at = params.expires_at;\r\n        var domains = {\r\n            'google': 'accounts.google.com',\r\n            'facebook': 'graph.facebook.com',\r\n            'amazon': 'www.amazon.com',\r\n            'developer': 'cognito-identity.amazonaws.com'\r\n        };\r\n        // Use custom provider url instead of the predefined ones\r\n        var domain = domains[provider] || provider;\r\n        if (!domain) {\r\n            return Promise.reject('You must specify a federated provider');\r\n        }\r\n        var logins = {};\r\n        logins[domain] = token;\r\n        var _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region;\r\n        var credentials = new AWS.CognitoIdentityCredentials({\r\n            IdentityPoolId: identityPoolId,\r\n            Logins: logins\r\n        }, {\r\n            region: region\r\n        });\r\n        Cache.setItem('federatedInfo', { provider: provider, token: token, user: user, expires_at: expires_at }, { priority: 1 });\r\n        return this._loadCredentials(credentials, 'federated', true, user);\r\n    };\r\n    AuthClass.prototype._loadCredentials = function (credentials, source, authenticated, rawUser) {\r\n        var _this = this;\r\n        var that = this;\r\n        return new Promise(function (res, rej) {\r\n            credentials.getPromise().then(function () {\r\n                logger.debug('Load credentials successfully', credentials);\r\n                that.credentials = credentials;\r\n                that.credentials.authenticated = authenticated;\r\n                that.credentials_source = source;\r\n                if (source === 'federated') {\r\n                    that.user = Object.assign({ id: _this.credentials.identityId }, rawUser);\r\n                    Cache.setItem('federatedUser', that.user, { priority: 1 });\r\n                }\r\n                res(that.credentials);\r\n            }, function (err) {\r\n                logger.debug('Failed to load credentials', credentials);\r\n                rej(err);\r\n            });\r\n        });\r\n    };\r\n    AuthClass.prototype.keepAlive = function () {\r\n        logger.debug('checking if credentials exists and not expired');\r\n        var cred = this.credentials;\r\n        if (cred && !this._isExpired(cred)) {\r\n            logger.debug('credentials not changed and not expired, directly return');\r\n            return Promise.resolve(cred);\r\n        }\r\n        logger.debug('need to get a new credential or refresh the existing one');\r\n        return this.currentUserCredentials();\r\n    };\r\n    AuthClass.prototype.createCognitoUser = function (username) {\r\n        var userData = {\r\n            Username: username,\r\n            Pool: this.userPool,\r\n        };\r\n        var cookieStorage = this._config.cookieStorage;\r\n        if (cookieStorage) {\r\n            userData.Storage = new CookieStorage(cookieStorage);\r\n        }\r\n        return new CognitoUser(userData);\r\n    };\r\n    AuthClass.prototype._isExpired = function (credentials) {\r\n        if (!credentials) {\r\n            logger.debug('no credentials for expiration check');\r\n            return true;\r\n        }\r\n        logger.debug('is this credentials expired?', credentials);\r\n        var ts = new Date().getTime();\r\n        var delta = 10 * 60 * 1000; // 10 minutes\r\n        var expired = credentials.expired, expireTime = credentials.expireTime;\r\n        if (!expired && expireTime > ts + delta) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    return AuthClass;\r\n}());\r\nexport default AuthClass;\r\n//# sourceMappingURL=Auth.js.map","map":"{\"version\":3,\"file\":\"Auth.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/Auth/Auth.ts\"],\"names\":[],\"mappings\":\"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\"}"}
