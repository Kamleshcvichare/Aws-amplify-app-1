{"code":"import * as tslib_1 from \"tslib\";\r\n/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { ConsoleLogger as Logger, Pinpoint, MobileAnalytics } from '../../Common';\r\nimport Cache from '../../Cache';\r\nimport { v1 as uuid } from 'uuid';\r\nvar logger = new Logger('AWSAnalyticsProvider');\r\nvar NON_RETRYABLE_EXCEPTIONS = ['BadRequestException', 'SerializationException', 'ValidationException'];\r\nvar AWSAnalyticsProvider = /** @class */ (function () {\r\n    function AWSAnalyticsProvider(config) {\r\n        this._config = config ? config : {};\r\n    }\r\n    /**\r\n     * get the category of the plugin\r\n     */\r\n    AWSAnalyticsProvider.prototype.getCategory = function () {\r\n        return 'Analytics';\r\n    };\r\n    /**\r\n     * get provider name of the plugin\r\n     */\r\n    AWSAnalyticsProvider.prototype.getProviderName = function () {\r\n        return 'AWSAnalytics';\r\n    };\r\n    /**\r\n     * configure the plugin\r\n     * @param {Object} config - configuration\r\n     */\r\n    AWSAnalyticsProvider.prototype.configure = function (config) {\r\n        logger.debug('configure Analytics', config);\r\n        var conf = config ? config : {};\r\n        this._config = Object.assign({}, this._config, conf);\r\n        return this._config;\r\n    };\r\n    /**\r\n     * record an event\r\n     * @param {Object} params - the params of an event\r\n     */\r\n    AWSAnalyticsProvider.prototype.record = function (params) {\r\n        var eventName = params.eventName;\r\n        switch (eventName) {\r\n            case '_session_start':\r\n                return this._startSession(params);\r\n            case '_session_stop':\r\n                return this._stopSession(params);\r\n            case '_update_endpoint':\r\n                return this._updateEndpoint(params);\r\n            default:\r\n                return this._recordCustomEvent(params);\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @param params\r\n     */\r\n    AWSAnalyticsProvider.prototype._startSession = function (params) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var timestamp, config, initClients, sessionId, clientContext, eventParams;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        timestamp = params.timestamp, config = params.config;\r\n                        return [4 /*yield*/, this._init(config)];\r\n                    case 1:\r\n                        initClients = _a.sent();\r\n                        if (!initClients)\r\n                            return [2 /*return*/, false];\r\n                        logger.debug('record session start');\r\n                        this._sessionId = uuid();\r\n                        sessionId = this._sessionId;\r\n                        clientContext = this._generateClientContext();\r\n                        eventParams = {\r\n                            clientContext: clientContext,\r\n                            events: [\r\n                                {\r\n                                    eventType: '_session.start',\r\n                                    timestamp: new Date(timestamp).toISOString(),\r\n                                    'session': {\r\n                                        'id': sessionId,\r\n                                        'startTimestamp': new Date(timestamp).toISOString()\r\n                                    }\r\n                                }\r\n                            ]\r\n                        };\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                _this.mobileAnalytics.putEvents(eventParams, function (err, data) {\r\n                                    if (err) {\r\n                                        logger.debug('record event failed. ', err);\r\n                                        res(false);\r\n                                    }\r\n                                    else {\r\n                                        logger.debug('record event success. ', data);\r\n                                        res(true);\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     * @param params\r\n     */\r\n    AWSAnalyticsProvider.prototype._stopSession = function (params) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var timestamp, config, initClients, sessionId, clientContext, eventParams;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        timestamp = params.timestamp, config = params.config;\r\n                        return [4 /*yield*/, this._init(config)];\r\n                    case 1:\r\n                        initClients = _a.sent();\r\n                        if (!initClients)\r\n                            return [2 /*return*/, false];\r\n                        logger.debug('record session stop');\r\n                        sessionId = this._sessionId ? this._sessionId : uuid();\r\n                        clientContext = this._generateClientContext();\r\n                        eventParams = {\r\n                            clientContext: clientContext,\r\n                            events: [\r\n                                {\r\n                                    eventType: '_session.stop',\r\n                                    timestamp: new Date(timestamp).toISOString(),\r\n                                    'session': {\r\n                                        'id': sessionId,\r\n                                        'startTimestamp': new Date(timestamp).toISOString()\r\n                                    }\r\n                                }\r\n                            ]\r\n                        };\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                _this.mobileAnalytics.putEvents(eventParams, function (err, data) {\r\n                                    if (err) {\r\n                                        logger.debug('record event failed. ', err);\r\n                                        res(false);\r\n                                    }\r\n                                    else {\r\n                                        logger.debug('record event success. ', data);\r\n                                        res(true);\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AWSAnalyticsProvider.prototype._updateEndpoint = function (params) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var timestamp, config, initClients, _a, appId, region, credentials, endpointId, cacheKey, request, update_params, _b, _c, that;\r\n            return tslib_1.__generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        timestamp = params.timestamp, config = params.config;\r\n                        return [4 /*yield*/, this._init(config)];\r\n                    case 1:\r\n                        initClients = _d.sent();\r\n                        if (!initClients)\r\n                            return [2 /*return*/, false];\r\n                        this._config = Object.assign(this._config, config);\r\n                        _a = this._config, appId = _a.appId, region = _a.region, credentials = _a.credentials, endpointId = _a.endpointId;\r\n                        cacheKey = this.getProviderName() + '_' + appId;\r\n                        request = this._endpointRequest();\r\n                        _b = {\r\n                            ApplicationId: appId\r\n                        };\r\n                        _c = endpointId;\r\n                        if (_c) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this._getEndpointId(cacheKey)];\r\n                    case 2:\r\n                        _c = (_d.sent());\r\n                        _d.label = 3;\r\n                    case 3:\r\n                        update_params = (_b.EndpointId = _c,\r\n                            _b.EndpointRequest = request,\r\n                            _b);\r\n                        that = this;\r\n                        logger.debug('updateEndpoint with params: ', update_params);\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                that.pinpointClient.updateEndpoint(update_params, function (err, data) {\r\n                                    if (err) {\r\n                                        logger.debug('Pinpoint ERROR', err);\r\n                                        res(false);\r\n                                    }\r\n                                    else {\r\n                                        logger.debug('Pinpoint SUCCESS', data);\r\n                                        res(true);\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     * @param params\r\n     */\r\n    AWSAnalyticsProvider.prototype._recordCustomEvent = function (params) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var eventName, attributes, metrics, timestamp, config, initClients, clientContext, eventParams;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        eventName = params.eventName, attributes = params.attributes, metrics = params.metrics, timestamp = params.timestamp, config = params.config;\r\n                        return [4 /*yield*/, this._init(config)];\r\n                    case 1:\r\n                        initClients = _a.sent();\r\n                        if (!initClients)\r\n                            return [2 /*return*/, false];\r\n                        clientContext = this._generateClientContext();\r\n                        eventParams = {\r\n                            clientContext: clientContext,\r\n                            events: [\r\n                                {\r\n                                    eventType: eventName,\r\n                                    timestamp: new Date(timestamp).toISOString(),\r\n                                    attributes: attributes,\r\n                                    metrics: metrics\r\n                                }\r\n                            ]\r\n                        };\r\n                        logger.debug('record event with params', eventParams);\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                _this.mobileAnalytics.putEvents(eventParams, function (err, data) {\r\n                                    if (err) {\r\n                                        logger.debug('record event failed. ', err);\r\n                                        res(false);\r\n                                    }\r\n                                    else {\r\n                                        logger.debug('record event success. ', data);\r\n                                        res(true);\r\n                                    }\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     * @param config\r\n     * Init the clients\r\n     */\r\n    AWSAnalyticsProvider.prototype._init = function (config) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var appId, cacheKey, endpointId, _a, _b;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        logger.debug('init clients');\r\n                        if (!config.credentials) {\r\n                            logger.debug('no credentials provided by config, abort this init');\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        if (this.mobileAnalytics\r\n                            && this._config.credentials\r\n                            && this._config.credentials.sessionToken === config.credentials.sessionToken\r\n                            && this._config.credentials.identityId === config.credentials.identityId) {\r\n                            logger.debug('no change for analytics config, directly return from init');\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        appId = config.appId;\r\n                        cacheKey = this.getProviderName() + '_' + appId;\r\n                        if (!config.endpointId) return [3 /*break*/, 1];\r\n                        _a = config.endpointId;\r\n                        return [3 /*break*/, 5];\r\n                    case 1:\r\n                        if (!this._config.endpointId) return [3 /*break*/, 2];\r\n                        _b = this._config.endpointId;\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this._getEndpointId(cacheKey)];\r\n                    case 3:\r\n                        _b = _c.sent();\r\n                        _c.label = 4;\r\n                    case 4:\r\n                        _a = (_b);\r\n                        _c.label = 5;\r\n                    case 5:\r\n                        endpointId = _a;\r\n                        this._config = Object.assign(this._config, { endpointId: endpointId }, config);\r\n                        this._initMobileAnalytics();\r\n                        return [2 /*return*/, new Promise(function (res, rej) {\r\n                                _this._initPinpoint().then(function (data) {\r\n                                    res(true);\r\n                                }).catch(function (err) {\r\n                                    res(false);\r\n                                });\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AWSAnalyticsProvider.prototype._getEndpointId = function (cacheKey) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var endpointId;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Cache.getItem(cacheKey)];\r\n                    case 1:\r\n                        endpointId = _a.sent();\r\n                        logger.debug('endpointId from cache', endpointId, 'type', typeof endpointId);\r\n                        if (!endpointId) {\r\n                            endpointId = uuid();\r\n                            Cache.setItem(cacheKey, endpointId);\r\n                        }\r\n                        return [2 /*return*/, endpointId];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @private\r\n     * Init the MobileAnalytics client\r\n     */\r\n    AWSAnalyticsProvider.prototype._initMobileAnalytics = function () {\r\n        var _a = this._config, credentials = _a.credentials, region = _a.region;\r\n        this.mobileAnalytics = new MobileAnalytics({ credentials: credentials, region: region });\r\n    };\r\n    /**\r\n     * @private\r\n     * Init Pinpoint with configuration and update pinpoint client endpoint\r\n     * @return - A promise resolves if endpoint updated successfully\r\n     */\r\n    AWSAnalyticsProvider.prototype._initPinpoint = function () {\r\n        var _this = this;\r\n        var _a = this._config, region = _a.region, appId = _a.appId, endpointId = _a.endpointId, credentials = _a.credentials;\r\n        this.pinpointClient = new Pinpoint({\r\n            region: region,\r\n            credentials: credentials,\r\n        });\r\n        var request = this._endpointRequest();\r\n        var update_params = {\r\n            ApplicationId: appId,\r\n            EndpointId: endpointId,\r\n            EndpointRequest: request\r\n        };\r\n        logger.debug('updateEndpoint with params: ', update_params);\r\n        return new Promise(function (res, rej) {\r\n            _this.pinpointClient.updateEndpoint(update_params, function (err, data) {\r\n                if (err) {\r\n                    logger.debug('Pinpoint ERROR', err);\r\n                    rej(err);\r\n                }\r\n                else {\r\n                    logger.debug('Pinpoint SUCCESS', data);\r\n                    res(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * EndPoint request\r\n     * @return {Object} - The request of updating endpoint\r\n     */\r\n    AWSAnalyticsProvider.prototype._endpointRequest = function () {\r\n        var _a = this._config, clientInfo = _a.clientInfo, credentials = _a.credentials, Address = _a.Address, RequestId = _a.RequestId, Attributes = _a.Attributes, UserAttributes = _a.UserAttributes, endpointId = _a.endpointId, UserId = _a.UserId;\r\n        var user_id = (credentials && credentials.authenticated) ? credentials.identityId : null;\r\n        var ChannelType = Address ? ((clientInfo.platform === 'android') ? 'GCM' : 'APNS') : undefined;\r\n        logger.debug('demographic user id: ', user_id);\r\n        var OptOut = this._config.OptOut ? this._config.OptOut : undefined;\r\n        var ret = {\r\n            Address: Address,\r\n            Attributes: Attributes,\r\n            ChannelType: ChannelType,\r\n            Demographic: {\r\n                AppVersion: this._config.appVersion || clientInfo.appVersion,\r\n                Make: clientInfo.make,\r\n                Model: clientInfo.model,\r\n                ModelVersion: clientInfo.version,\r\n                Platform: clientInfo.platform\r\n            },\r\n            OptOut: OptOut,\r\n            RequestId: RequestId,\r\n            EffectiveDate: Address ? new Date().toISOString() : undefined,\r\n            User: {\r\n                UserId: UserId ? UserId : credentials.identityId,\r\n                UserAttributes: UserAttributes\r\n            }\r\n        };\r\n        return ret;\r\n    };\r\n    /**\r\n     * @private\r\n     * generate client context with endpoint Id and app Id provided\r\n     */\r\n    AWSAnalyticsProvider.prototype._generateClientContext = function () {\r\n        var _a = this._config, endpointId = _a.endpointId, appId = _a.appId;\r\n        var clientContext = {\r\n            client: {\r\n                client_id: endpointId\r\n            },\r\n            services: {\r\n                mobile_analytics: {\r\n                    app_id: appId\r\n                }\r\n            }\r\n        };\r\n        return JSON.stringify(clientContext);\r\n    };\r\n    return AWSAnalyticsProvider;\r\n}());\r\nexport default AWSAnalyticsProvider;\r\n//# sourceMappingURL=AWSAnalyticsProvider.js.map","map":"{\"version\":3,\"file\":\"AWSAnalyticsProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/Analytics/Providers/AWSAnalyticsProvider.ts\"],\"names\":[],\"mappings\":\"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\"}"}
